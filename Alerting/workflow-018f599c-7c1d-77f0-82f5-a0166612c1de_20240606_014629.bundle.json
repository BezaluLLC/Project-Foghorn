{"version":2,"exportedAt":"2024-06-06T01:46:29.069823+00:00","signing":{"cert":"-----BEGIN CERTIFICATE-----\nMIICazCCAfGgAwIBAgIUFJtHAR8D+ZfChHcAXHemH7s8zRowCgYIKoZIzj0EAwIwfDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkZMMQ4wDAYDVQQHEwVUYW1wYTEOMAwGA1UEChMFUmV3c3QxEzARBgNVBAsTClJld3N0IERldnMxKzApBgNVBAMTImxvY2FsIFJld3N0IEltcG9ydC9FeHBvcnQgQ0EyIHYxLjEwHhcNMjIwNjAzMTkwMDU1WhcNMjUwNTIzMTkwMTI1WjBDMQswCQYDVQQGEwJVUzELMAkGA1UECBMCRkwxDjAMBgNVBAcTBVRhbXBhMRcwFQYDVQQDEw5sb2NhbC5yZXdzdC5pbzB2MBAGByqGSM49AgEGBSuBBAAiA2IABMcTJzyLIvX1+3545EJbFeNVjahxVq6TFQ7n/IYZs4yEMQzDWZjAyHhJPZk3Dxq/wFzesXMYJu41rhxfz7AZh15LtFGfy9V2B4X5KH7sGJWqOan0mabuF83llruTLA/NQaNtMGswDgYDVR0PAQH/BAQDAgeAMB0GA1UdDgQWBBTDePOSC6hckrg6usrK2giZv9GxpjAfBgNVHSMEGDAWgBTojdemsJqfnB19iyMxmIi3OGYw6TAZBgNVHREEEjAQgg5sb2NhbC5yZXdzdC5pbzAKBggqhkjOPQQDAgNoADBlAjEA8NsLnuGhfTPC7dB0ojWf5WmH64qFZuPFD6Q0RwGYO0D1Tn2x5+/37kW3HFcGHV0wAjBM7LSidsc7E9+fmcesnN5hM34eGMP+YWCoEeFIPPANXQKemAgUVf35iXyU64sVEC4=\n-----END CERTIFICATE-----","hash":"sha512","signature":"MGYCMQDRBdd6sGOW88SCmdmv9AMGrs2KABk/uS0e/mRG+sHdcYmyBiTO6ypRUWbrZyl3HTUCMQCQQnU9Jaalcuh87/95ssiccXt5tqa1SufxN65m1O9hOlFKkPWvTXOnCb8B/bpOF+k="},"objects":{"workflow_task_id:Cu9FqoWArgZEdR9kRj3hFV1RzhMgVrWsgJ1TERB1gnhF":{"type":"workflow_task_id","content_hash":"EpRzrMQh7U7ZzVMSSvsDQ4XAyybFnMyPcshEdutfVvq7","hash":"2nCEU445sRq6cizj53994BuQNyYE3Jc8gF7fx9ah7nK9","fields":{"id":"cd3c4b5570a24ad99ea7f8f654873ecd"}},"transition_id:EPPkeZZVb5DLTMuUTn3KHHKL3f3knHK95BWZUKG7pL9J":{"type":"transition_id","content_hash":"9gbw4hCi359RHMg8tjZJnb96gBiyqXe6w3aYsmf7yhgL","hash":"8VEzRPPpb9P7xYyEaj6S9AemWzvD7GFFS8h7AbJb7niL","fields":{"id":"018fe367-5d57-7ab6-8c9b-d3aef8717451"}},"workflow_task_id:2dwUZEUdPhEqhD4KUunny2L5EYjGK2UdNmQQHtjKfjis":{"type":"workflow_task_id","content_hash":"2DX22urwtyetGpqdBuyXNVG7YsonsTdwrxSuLFTDpfmo","hash":"3r3tKG732CFoxwgyqPRMywwiDTkBWzPa42DGNLQBFFPu","fields":{"id":"065a1c98358e73dd8000a1b68b7ece2e"}},"transition_id:AntQjrWTCURSBB8mTAJKHFw5WzcKoJvvfniLKMF86z7h":{"type":"transition_id","content_hash":"HZUFBvBrS2AgX2nnBv3fgSgAVtFxozcZnnvDnfbten8y","hash":"7Fze76mrsinyXCBUeyeqX77yW4QEDMRfswS3AS1aE6BJ","fields":{"id":"018fe367-5d45-7076-9aa9-f6f0c80bcfbe"}},"transition_id:ELPpCFyiQ49AoG7e9hnJbzLGBf65K5HhpYd82b5MTBuw":{"type":"transition_id","content_hash":"EDRyLW2wmgpWPSCeHBFrSZafL8rGhJ2mcrTGmZMDLkMM","hash":"FhWqmtBhaD4pJ6f2tN9FFGYuBn7GoMmUmXukGb1uPSE3","fields":{"id":"018fe367-5d2b-7f87-9847-e77483928b2a"}},"action:8GkwDvknUKBzMyCbv8sYaUuYQkAAerFCR5Ly91bdzM1i":{"type":"action","content_hash":"Aj7g63oBpFTyTLgcv25UHmfMB5WmghbjNdHZYGy7KxYN","hash":"JAbYYJfYDMeHf1dt791VFAinW1gZoCwsGcGznS61qhTC","fields":{"ref":"transforms.set_variable"}},"transition_id:BMumkNKwg7oBvBnrrXgo4ygMK6M4ujn7DWpbKwT7TwRh":{"type":"transition_id","content_hash":"36EvKZfajxpzfCapAj7AAHTFAfxwA4mhXyKgtuYTN1dD","hash":"9X15hPMw7tjkgaZy2vS4BTvBZ2TtzskoyFFUPkqgB7t6","fields":{"id":"018fe367-5d4b-74da-b0fd-7d8a3a23d017"}},"workflow_task_id:6LTTLDigNBByUFW51KaRVdw5zjqTkaw7AnM5X5J6JSay":{"type":"workflow_task_id","content_hash":"691XpoQsGFoCzNe5RWs8qkacNhzfecTyQTSifceRTgvE","hash":"Som3iBEqxvUjwjf8hG9sK8Xw7RZp7WifGmm7dMkiagS","fields":{"id":"c6075c80fb1d48c28142d3544107bd32"}},"action:GqvM37n6PXEaDtiujJ64D371g2zLDPT5p2zQ42dshqyf":{"type":"action","content_hash":"FfjNcHvH2G69Vg7vjYYE7k9sKjFCDWYKcrP19ZFX7JzL","hash":"Eg6aKg1G8Xhr8B7HifPpm9STn1wHQDQ8WSCBMCSywvK9","fields":{"ref":"transforms.append_list"}},"transition_id:Hxmt7Lo5gVMpfsQtZfP3Hnvkas3K2vxSwjdpUgvSSmi6":{"type":"transition_id","content_hash":"BQjuchTcSd3GzuqDFjUqvaiFt6bAXopcwTmrd7wypZvt","hash":"iccMzwwZFApRm9i5DbxVG4fMiBXkaYWA9GCPRaTzQ4o","fields":{"id":"018fe367-5d25-7153-9704-419b3707e597"}},"transition_id:Dp7RETdzX84aKcNuRsUMwHiXuwhTCMeF4AiYdpfxjtyj":{"type":"transition_id","content_hash":"KGmSSfCKcxyjzNse88e6A1sooVb645VRDVNgk2H6bPw","hash":"J82fb4kNjVbLTgmGzjEaf6R6TfbofUxLccq2uohEvvrh","fields":{"id":"9dee4db2-1f03-4cdf-8a7a-997389dc23be"}},"transition_id:EvpQo7zVnyyANErpsDZTXSYkjVXibZdRoYvUAocMCsCR":{"type":"transition_id","content_hash":"3DE8A9RaTRtctMbe8HAgALyDxDv9SPVLZ2ManSw3LQMo","hash":"HcAkNR7BxZgSQ7mJm4ughPU68RnCJzYnX6tNjQiXZEe7","fields":{"id":"018fe367-5d45-7208-b541-fad191fb2957"}},"workflow_note_id:2HXAcNQiaqFYQbR6gPcUFMDcZhmZrBy19thoFWJ93CWL":{"type":"workflow_note_id","content_hash":"3iNqcghfHsQMozNAd96oTBwu4DWYva4k3js5V9ASQJW7","hash":"7t3HuDNTV2BFfUpVagfm6HGPHXRyfburAbDLFbUiu1vS","fields":{"id":"bbadb78d-852e-4647-accc-957872c34df7"}},"workflow_task_id:CCQBUH499sBpUiqa365pHCYthEe3G2nfysnSWyougByV":{"type":"workflow_task_id","content_hash":"C5pJPRj8ujgurdXxNhX77sHuvcdHFQCMZ8ywAYnBhobJ","hash":"AwMwe9UjZCXdPcFeTt5eyJBVsUxE9GDZgcm8p2x6xWCE","fields":{"id":"da6c4c561d0e4cb5b4e16a22fdd3ef30"}},"transition_id:7JBobH52jvQRutpSYL45YjWPhzNywXjzhkhHURev7SqV":{"type":"transition_id","content_hash":"DtTyje8eRxNy8bMPCGCJTQq1SexzXgzDFEZq8VbTrEzW","hash":"BafCtWfAvUxvMz1wTvG7KpBCFxWi2VSqayzZ4LteMPJa","fields":{"id":"71c16c18-13e5-484d-aafe-7fe251162714"}},"transition_id:5j12nf7sAAfRiiGvPTyPz68V2Nr6RJXuya9RdZNzT3yF":{"type":"transition_id","content_hash":"4bXbneZVzU6PQuVxRq5wZdGMGLQbU4d1KLMAARZLNFrR","hash":"CFYWtWKjir3HM4QwooCaiTfybbWsZgdq5BwYX8gLxbSx","fields":{"id":"018fe367-5d51-78f9-bfd2-a13982f4485b"}},"workflow_task_id:8So6t5sMH2XECUQrpKWAdkbNoyn4nu7Kjh5pkTNpYRme":{"type":"workflow_task_id","content_hash":"3gq2PgTY8vacMCe2AdH4eFLpLQ5y2dwutuaMnKgF9TGE","hash":"Ebf3kDAWXt4rNBb99iSwYdyXHJ4aAV1NcwgWNtwNsxk","fields":{"id":"065a1c98357d72618000d7e8b79821d8"}},"transition_id:DjANpmZexG4Udm2NTtvkPA6iQSnbgq8imDzjU4NFEaSF":{"type":"transition_id","content_hash":"4Zx1mfCsxaQczDHDtBqDwvhVpTRbqAJZoUKagU6jd2mu","hash":"Hn1kT38orrAhye4YoB58agJ2x1wo6y1GZAKapqQahduc","fields":{"id":"018fe367-5d45-757b-9e3b-c942b5cd8d36"}},"workflow_task_id:2wHprfdymd4NN9tLqxyMuuPibJBVe1HqmewUdZ9QEyFC":{"type":"workflow_task_id","content_hash":"B19DxqBQrp3Y8Q6v6tRbCUawkT84PXLSEnxzoCMtkT8D","hash":"BKisWBFXPh9thqCdkA2ETy2eQo7B83rLuVLtsDftV2xx","fields":{"id":"e7ab9fdcba3848f6b3fc19effa811768"}},"transition_id:G37RLeKfJ4Nutib3hu83ebDMm1Bh1Hpe7oTwJUCz1wPg":{"type":"transition_id","content_hash":"B4hbabP9SpCtFvPthHAkajVvLCva9QfigMb4XcsJyZP6","hash":"AFsCJFpCVd9pfATenvnpHXU5BVF36L8FhaSENxdL5Ew6","fields":{"id":"620ae544-3066-4c8c-8ee5-12dd1d9c6570"}},"transition_id:524Z26aZJREdruDuVnEBmxoo5RktwfZruXUd4haHQjS8":{"type":"transition_id","content_hash":"41kjmgsfD4pK5Dadh37Gfiaj5PJoiq3js5vfWQ7m7A23","hash":"H8J8rypbQi3NGoQ5gwfQMWhHGN8ZDgwg9y3nnz3h2h5","fields":{"id":"08890d76-e87c-449e-a574-210974cae6bd"}},"transition_id:pY1h7xgWgX1X3nABRr27S7aH7jhwsnfdHHL9GVc96sd":{"type":"transition_id","content_hash":"31aym5Heq6BNHgXVZ19k9n1nFuCiyUVSDUmSK1s9wBgg","hash":"52r1m8AJTkpwpxVTxcCuZX3sp9KaN5JHrFanhmQd5Aos","fields":{"id":"018fe367-5d4b-7dbd-af5b-fc0320c09e00"}},"workflow_task_id:Hnay81yeZHCXXEAG7fRvmMQfU6ZFctKBcZAAaFFnjrR5":{"type":"workflow_task_id","content_hash":"5F4UDWkHdPmdbwbqXqCGJf33pKZA9g4Wg8W1U3cK98M9","hash":"2SCkNEvsfRC2XW7yDmSAoX8HgibT3VgA7gpBBENrdLnd","fields":{"id":"dd779aa881604320b50ee6a1c7f5c156"}},"workflow_task_id:5mf8KZ7fiVf9TBpxVjw88w9XPWJueJcMZsGvhSe5Smp1":{"type":"workflow_task_id","content_hash":"783wDUfxugaC4oGT3T7DWv3gqpJaQgUF8YvTuyggmzA2","hash":"DjaSPgbQX9aEXhd9QxXvFnRLawb6gc7LaemA2K245c9C","fields":{"id":"065a1c9834d27bd6800037565baae34e"}},"workflow_task_id:eVKFShyePdXkN6y7SFNTzC7poTDKJoEVhathuXVYn7P":{"type":"workflow_task_id","content_hash":"Fo7Wdfwx9UzEzCm54BnKGgR9GYdR8oLXRNHPuGRV9zgz","hash":"BqqxNMX1Dz8TJXhY8Gmy3m99VcH92VmpXuLQH77Xh3Cp","fields":{"id":"065a1c9835627ab680001ff5936a77c0"}},"transition_id:EvKirKc53viWoMud5hkJUoGUW66Lh9A7X1hXWiEkvZpv":{"type":"transition_id","content_hash":"GPoxKR4WHcRHofKdfGgfVQNYqRyiTt1HTSL5UP4L7y61","hash":"BiZRBYPYvHJxsUKJxHB4DagyR1MYqdJoTp6pLsaxtd82","fields":{"id":"018fe367-5d3c-7e18-a5f8-a6fee4cce4af"}},"workflow_task_id:sjjL1PU5aaAz3BE6i1e5RQhMJrkLACv5GP6ZsLSH6Zt":{"type":"workflow_task_id","content_hash":"3sxQ1iRX97i5xxZ2HTsv4ZjucGTDXEFsXtkDRyBYDt7V","hash":"4Cfkhgc6ruSa4MviUzQJi7Rr4GanXoqTC9pvookv7ksN","fields":{"id":"065a1c98358e709780005019f73f00bb"}},"transition_id:UxWYxCn9GXEgLVS6n2WN7jcxUvUrNUu1Eb8R5t9wqc1":{"type":"transition_id","content_hash":"6SVkhDrwCZ3U8h93HkD4umiNriXbcdZJXD5DzM6eu6gj","hash":"HwVQ1mtJtLT5iZZy92qeP8GbnMUNRvhcX775cy9pwJNa","fields":{"id":"018fe367-5d3c-7864-8665-ba591ab38228"}},"transition_id:7Dkhaez5FgnbJUhvsBUKXJae7LHgMi3XYyU8cpyznTu1":{"type":"transition_id","content_hash":"Evh3zAcEzXZ7Gnth4A8CjbzrnDsRPYyn4qDvQ7LHS9UF","hash":"4hQDN9arZTVsBQaE8p6UPBMd62GLebSV61dwbchTMpgU","fields":{"id":"018fe367-5d57-786f-80af-1c4b5443d8dc"}},"transition_id:6181CBVdYdcHsiAq4HgxieZa6BqTKvSCGongZoMvDz66":{"type":"transition_id","content_hash":"5ygGDH2X6Eqg4VuoqFPvTjfNLFmpXeXVEXeFbQ81hEXn","hash":"HsBY86ub55K9Yd4ZzDWKC2Kt5SX3NNyQCqfVhjLCW2W2","fields":{"id":"018fe367-5d4b-7f25-a812-be6e1dad4094"}},"transition_id:871mbcEPgJoeZR2xFfswuS2TuGF6ojkdapCgLcSQ6vwa":{"type":"transition_id","content_hash":"AinPa2PVCBankzPzwJs4Y8YKLq392ykXL4CM1YD3qZ3B","hash":"FXEwWNFwQFUse41un912MeVrmoSYVYXXTzuMLdUpwMqR","fields":{"id":"bc546f7e-3d6a-4207-a182-91233ae616ae"}},"transition_id:4FLbqL6UrEtoJWkR9be6fQamgauLkHHRdWcwvqRkzKWM":{"type":"transition_id","content_hash":"2vBK2cLcZtarFBjvsX8uJv9AHfzCPwuJqqaRyqwLNYDx","hash":"9TcJxK8P6jMzdPBM6DJaYzdNZVdbpeNDhMh6Amtvh4Pz","fields":{"id":"018fe367-5d51-74cd-b3a4-6b170ddab1b0"}},"transition_id:D7K7M9Po2mSpjKKUfdPPk7sDkBx6ESJHkPZvrRrfg1XH":{"type":"transition_id","content_hash":"3xghs1kkLr9YePSFrhzHzMJZQgeJkVvr4tRoANqdLBGF","hash":"E5ZLRUroStGQPSux4XhewTrkpzZWSmDLasReykWagKG2","fields":{"id":"bbdfe9f5-da42-4e83-b288-3d598a0a23fe"}},"workflow_task_id:9RVPJ2axWfzsJPjQceeYjYA7A72hgutHmQF3Zi8csz2r":{"type":"workflow_task_id","content_hash":"8xvbWFZAw8JtVtDDXZYqnPpo3FdxKiGZi94EdV4hkcQA","hash":"762iswErccs6fT17sgd2M5pmaepPqw8Tcfct122X5MCn","fields":{"id":"513e24bf3b6c49848ba20c8756750632"}},"workflow_task_id:9BH92L4iLYMCJt2V1zXmv67pWFeJvUcZiEHTyrRWt2NT":{"type":"workflow_task_id","content_hash":"E7Fs4CkKbgimVHLMqSSasBHWXMtMSknfSemBi2gURpYF","hash":"93PC1hjt8ucczxuunf8bkqJakgN9vt5hwLqV1kbw2RAy","fields":{"id":"065a1c983562785f80001a44c8cf288a"}},"action:EP5vDxnDjrYnpHo1dbtz8YCrvEq3jKHngkLwkfJqAx58":{"type":"action","content_hash":"CdPL6KHuhM7mBvTHi4QnQbxCitnoxuRrq1BfHNnQYzKB","hash":"Arr2RCEM96WqU2EkvigszSfsW9GZHa4HJC5a1fL9qZ5g","fields":{"ref":"core.noop"}},"transition_id:BAiiJ6N4kDa1dvQ6XHaQLzY5X9Zp8LDXNF8jFRq5sx98":{"type":"transition_id","content_hash":"95yZbJLVcnfaLEPgggFpDoUfZnEBMAUb7xRQwyW3U6C6","hash":"7n4RoBciMGVbyANibbThBqMtr5WVQveYYeduuQpamcYL","fields":{"id":"018fe367-5d51-7a70-91f9-85bc8ed7044b"}},"workflow_task_id:7knwKKtcR2KDJeKNwn6s6LSUXB45eDYT8HHQiuXRZC96":{"type":"workflow_task_id","content_hash":"4w7gTBQaKMa4Pv3BGs7dAbV458v4SqoV8n361XSkFVT9","hash":"D9Wo2SwbkQ146d9c5qrbRPLLf59yuUGE9A815qGamsZv","fields":{"id":"3b63ee2553304d639877b86eb2cd8bab"}},"workflow_task_id:HtuGm84FTujgu5JwB3urDFzgt3jSnBLdNppr8kbLPoe9":{"type":"workflow_task_id","content_hash":"EPRsHefAzR3VvvST8YTfBvCTuoeJAXabKrdKeYa6UFSp","hash":"DjxtLqumrKi1dnV3UvNkQmnW4LbswZ82PPHHqNWWZAuw","fields":{"id":"39b0b7a736164e1886a1fddb31dd60ea"}},"workflow_task_id:94f5pPwzwH9dNwVEXrsp8qwozKvyfCx5gNAwQbjj4w7f":{"type":"workflow_task_id","content_hash":"DWhJqLr5oWQSoZoFUJZzEE9muXCzBbgonyTx79mga2fh","hash":"9REZXjXnUs2YaifDEDj6Zi6cvApaT4HZiGz2xro6xm1K","fields":{"id":"065a1c98356275f780003d31a85da580"}},"transition_id:DjnY6fXQn1bhCWTueTqhq4FXojtmK4jZ47YGL7jKrdtA":{"type":"transition_id","content_hash":"8bSzgfajDHvVQXAQAmMJYHtp7BSLy3SFCErbhB42ZPwX","hash":"9jAKJH5eVjETG1wTbCkGAJNr8Ag9XH69WxGwNV9FwxuZ","fields":{"id":"018fe367-5d25-70aa-af2e-2ec38014c80a"}},"workflow_task_id:BjfBEAkj6t7WSSG9h3oBkQ1HMTWpjFpiYTXGaYZUy34g":{"type":"workflow_task_id","content_hash":"CzKLiKTVVdzoPEPAgb52nbBMu2tmJGBgtHd9vSNYyLhf","hash":"DGtYJLttjyD2QHguY5AgtxhSBpVXHaYTv4SsJJdXaJqv","fields":{"id":"08aa4d8fb4a0400f9a2c36d4b78066ba"}},"transition_id:8bHw943kvAtJAr19enNumpgLu5H8GzzrMMdxi5w5ucDT":{"type":"transition_id","content_hash":"EqBwfXhYdi1VQ1RpmwkxYhM7dLGkHQWe8sbDuYwhu4fn","hash":"J6Ric3pvLi7Qs1cR6LnqmK6aUyVN7su3RjJ9ckocjx4h","fields":{"id":"018fe367-5d4b-7965-858f-1371e0b2e3db"}},"workflow_task_id:2QJ4L4vzbYnqeZzACDUKtQ32fF7q8RPBhAXZBbBWPsfB":{"type":"workflow_task_id","content_hash":"Dzbwt5UvprCtmzK66L3uY9PsYQPcTPZaQD8YCFFNN2GF","hash":"72bhk7E61peGVrVyKJpoGw59i4L6kWA3VSHidqLZ4SR1","fields":{"id":"cdd52b26f2b94fceb1780939e12119e1"}},"transition_id:3DdHsqFS2UjkaUp2siQETTRiQCBeFqvrnpjsPBTBDRct":{"type":"transition_id","content_hash":"8NNyxZQuvaNzNQLF5fCF5UhP67LHyLnoZMoxtnfiDH3T","hash":"3R44DkMfYSmmALvNwec2uSTPYdsahA8qrnQWtwb9TjL5","fields":{"id":"72316932-b6ea-4538-ba89-0712b5e5ce26"}},"transition_id:9RF1fKNm1xPZXQu3AJyRBxqQaET3kwi2imWQTUUmHp3B":{"type":"transition_id","content_hash":"CLdFrLY2BiRsFsg3qmNUA4bEa7kbDsVs5ysaNsPpGDB6","hash":"2VPFbsJ5nwqqNdwfdHFAVkfqYFfB4sYQSB6BGtRwD7yc","fields":{"id":"c61ffc0e-95c9-4211-9c94-e999f15a2fcf"}},"workflow_task_id:55UzbJNRJLyveUMHCemgARKpAt5w4mPJfzoqVwW9K6fy":{"type":"workflow_task_id","content_hash":"HdweE1pGiaEuZ65Zys7jRUMJXxug6iSiZsy79cEBBicf","hash":"4pSuNogzgmZqmY9FUikyXKkhsRvGwHGL6SsWSwdgutfs","fields":{"id":"065a570c39617e698000a8ed822df1ce"}},"workflow_task_id:5AHL8u7LPxjQishrMJAB6cgrf45KqZBmLwSBHZxBznye":{"type":"workflow_task_id","content_hash":"HyaJEV9qeMNnBLooZJN77N8KVRRquGByDyQZR5JUNrYd","hash":"EJZqwpZ27HkRBuf3gfpCBFj6Ne4NJbcbr4eAQQQgCYWY","fields":{"id":"065a1c9af4427ff98000263c1244c6c1"}},"transition_id:HgCnDXwNBxapYuyVUWRZ2257mWwwm5NHVPQ26JLJoa2L":{"type":"transition_id","content_hash":"FbhN4CYHv8uySyABRyoavL9ZuuoETgbjtK3sWdPGDddm","hash":"Cwqh2iS77KJryE85aMDcSsPFNp7iEsTx1yv5DARUiT9Y","fields":{"id":"065bd5af-f714-7cab-8000-1dcbf8434910"}},"transition_id:AwDYpdRyspmHMXG23m7LtDzJ3qqE1c4x69r5YXtorg2f":{"type":"transition_id","content_hash":"81t1LXinsPMyHfqm8Q5Mysy4nFJjfpv9A7gajzrXscKE","hash":"49eSB1Ug3rNWyowpDpHvv2Ly2Dz3R3QLQgJgPVcLUtqR","fields":{"id":"065bd5af-f714-7a36-8000-81629e807af5"}},"transition_id:ktAa8ei4Wfj4HLUrRZCYx9S6SHAGq92YTSsVEHkNkKy":{"type":"transition_id","content_hash":"C5BySvfeXjVfuyGEEWSjQ6uoXmD1pPio9aui96PLesu6","hash":"2EksNpRPHDbPcAUvubdXpSYbXrUTp13oURiG5QzCLvLb","fields":{"id":"018fe367-5d4b-74df-a23f-f538da7879aa"}},"transition_id:4kXym9cVX4ixVBaqLxQF3xxRuiEzhXJumjJiZoVSLGC6":{"type":"transition_id","content_hash":"AnWQnJcAWWwF8ZsmiNduQQW5PPUYKahR4Kd5365AANWd","hash":"3SchzpUL8ykdroRKvH5ueqHHBraUnvVSSioKEtNf3NBG","fields":{"id":"168f235e-deec-4738-9f3d-f0caec127c0a"}},"transition_id:CsQvijhjxHczMStpTo9fZAaKXA9wWCAxfkS82fS4aGd":{"type":"transition_id","content_hash":"2Yue7cZ1yooH9afNYgUra7WxEUNFiQkiQkVJXkiQ2g8u","hash":"e5oFmgbWXVucnHoo1AVFFQcbgQAmeQHoxrDBrtqovkK","fields":{"id":"018fe367-5d3c-7126-9823-a6092944285e"}},"transition_id:4zfrApwbsG2jAGNTJN9MgFWUoS8c4NoiKCSTm2apoDmX":{"type":"transition_id","content_hash":"FbBtPPWQYwSTp6wN6bRwq78sTY6mBB8CskkxSKgNopUF","hash":"7BPNLmtEa9k15Nzg1zEDU83evod4jyqMSP9RjiGQS1a1","fields":{"id":"018fe367-5d51-7643-a889-51c101448572"}},"transition_id:BHLAbwH5d3dfn5QvytdMtJ76i8vsFLTsxyQ4e6S2UP6y":{"type":"transition_id","content_hash":"FtzbzHYekxpmsEJzE9f9mu8izYpSRpjqBmWWwh5Q6PkZ","hash":"BK77dJaV6uyaUd6pjSthzQnY6kKhzcVrW13MmBtXVyti","fields":{"id":"018fe367-5d25-715f-a1df-6283074c3905"}},"transition_id:54qAxozXBzTFQTsdAz5qDzs85iKr59y6enVng58WGKV4":{"type":"transition_id","content_hash":"CsGnTcAgfbRsXBrntaMFEdDfNJQmpMeaoYa2WY2S75Ez","hash":"7sNe4UZRJfFTu4qYaPsfh19XpMV8mz5hGtzDik9zWuuE","fields":{"id":"018fe367-5d2b-72bc-8f9d-8cb3017712cc"}},"workflow_task_id:BkEBoe1Fg5YAAbtSywamwkBeVF7xHY6auHmXj9nvFudC":{"type":"workflow_task_id","content_hash":"J8sSRg2JL9CNF2DEQs6fJVYRnF8f5yLaRvBMo8ieJLpM","hash":"3WvJMPmw9kFnM4q1ik3YoyyGfGiE3qVZtHt9wtuDzMjs","fields":{"id":"615d39043ab945dd9f8e57754ea4c135"}},"transition_id:B5fsx4pqrdovkTN28n6LNnfDDEAJmgP4jUsxo2DexGAY":{"type":"transition_id","content_hash":"4JmaE7mvuiDWNspr4Xgbt5ba2zTPodDZgXvekjBYcTQb","hash":"A5BPwfQWdp3nCAYVMtipy3wC7Zoyx2Fj2k5fMbk3BeVC","fields":{"id":"018fe367-5d57-71d8-ae43-dbc1f4bf14c3"}},"transition_id:4QFCNnV32t6U2KeWyFrsEtKfkRDPyA6NkXFUd5AtAJRF":{"type":"transition_id","content_hash":"GFsgcGoGx2kVw7SLMxqpnKjziGGHQxCycaMBkjhqmsjP","hash":"ApqYgbC3kNpSfkziwnrbGtxZ7pYS1J1yrBnB2D2R2QwR","fields":{"id":"018fe367-5d51-79ae-931b-53d7502ea4ce"}},"workflow_note_id:DnkbdYn8pn8zLtQtNmUXcx6Adx2dn32JkDTK9zcNY6LW":{"type":"workflow_note_id","content_hash":"7kfbEDtRiCCvwxPUoKnnLNK6U7v2bZGWUbak9Dmem2nN","hash":"2q9YQJLLdBWSBwqfCvrwf4DZ9US4biZ2aNZ83LBoPRR8","fields":{"id":"018fe367-5d45-7e2a-b120-635b00218eef"}},"transition_id:FTmT7omspryGt4PD1CHNZDyufHR2UzkEev4Q8QNPpYEH":{"type":"transition_id","content_hash":"AqLThCrSTTNdvfdZPMsj37b85DMjCZSfKpGSGCSyMTBQ","hash":"72LvZ8sYYKCrBnWqa55Z9sg5SMtUgwqghQLH8sPxSCeQ","fields":{"id":"018fe367-5d3c-75bd-93ea-428bd14ed7c2"}},"transition_id:DkVHDo8HvcEqZCbWSj4yebGLJyUXnYMhmxwydnL2HLGi":{"type":"transition_id","content_hash":"5NuZGNkCzYJwCNg9TF1bcHa2FFYbddhub19GFxTGys7c","hash":"4ZmcUEYkMubYj8jgsZgpmjbbZQe14D8WQWoovyPm6KnS","fields":{"id":"018fe367-5d2b-716a-a6cb-9b06250ffe96"}},"transition_id:6ZQdNDwc5kWFiuNza5TgGMFHQ3S9dhZsLrJT7M25ZUob":{"type":"transition_id","content_hash":"9hX63WqBK7GhvAsTMWSZQgz671SZHfaXN68MT2D71g6P","hash":"Ak57qAndPH7nyRN9hKGm9wfTuJLV8dtfrgcK3hEBccbv","fields":{"id":"4b7cc8bb-75be-45c4-814e-0d5c304023e4"}},"transition_id:4M1yTkfgp4tCnwdZ2CEZe6GHur7BgAgYX6mnMLWLtuYw":{"type":"transition_id","content_hash":"FMhXeNvEKJaidHAsEsNDGVVGdG48gYfENokgdDCZT6uB","hash":"6jy5cCuhR7joa1GU7HSBhv1fnVo5poeMXoN4hweFsg4H","fields":{"id":"00e750e5-3203-48df-8afd-1b4b56a1a7d5"}},"transition_id:DQugZd8htPjo27EWfYgdxK6Y2GSVHjs4LiaPD4SxHMZ3":{"type":"transition_id","content_hash":"CSkgmQuiAWUWWaE7KmmAGptcJQDN8UWKGU1W1MxK3QXt","hash":"EgRHBNF95XjmksNqXwiLNDfqibUytEFBVUTK3KvrmoZ9","fields":{"id":"018fe367-5d25-7d2b-ad86-06fc254f6d05"}},"workflow_task_id:D8LLCM536iaxjJh8jFdefUzyEfANUfVyR6wyLz5NSbrf":{"type":"workflow_task_id","content_hash":"FaL3hCzg28wFWDJe2xL9kTeyvADoFCPFRRpBzEWBEWd9","hash":"DUh22izVdWXtLTTynrfGvDfKzCBwfzjBBXcn2T1JQdJw","fields":{"id":"065a1c98359a7cdc8000fad768b4cff0"}},"workflow_task_id:3WfjjreaxgNXUkHtrbtWfpxXCF9KiieE8W7EXSfeoer3":{"type":"workflow_task_id","content_hash":"FUkJ6TTvmxa2YXrasR73RjVQaNJSN8Z4bMMwKWCsMjAA","hash":"FoCGneh8hgzxdz4a4XD5R87ssYmLKyX7yR8T8MXK6oWk","fields":{"id":"f870c321f2484387bffd9c9d16152505"}},"workflow_task_id:J716cUBCVe49yaEy5bTno4v4DKNAi45Rou9qxuLqJXWn":{"type":"workflow_task_id","content_hash":"HbnxTL9wnND2ttHmAy5BAY3nwxQY6TziVrbj68M3Yw17","hash":"6UsJYwTwwWc2qT7R57XZrksJmR4gCexmB9au9nXYR3vg","fields":{"id":"065a1c9afc9c738a8000adc071bb3a15"}},"transition_id:8W4Z95sEki6v9hrsrMB5AvFGzGcXkaWUCzipD9F17QPy":{"type":"transition_id","content_hash":"A6PKjd4Bf77Mfh2KvTqs2NMQsNy51tfhcpgM2eX75rcE","hash":"eTGjx84VuJdKYsgJr7d7kNk3YEmDvMfqjNqHLxtmLjz","fields":{"id":"018fe367-5d2b-772e-b3fe-fd3f8951fc5e"}},"workflow_task_id:6FHN1s8ZfznjddZ7Td8xQDET3a8pB3ZxgBKLkVXsbKTw":{"type":"workflow_task_id","content_hash":"DFG9xsQRRAywK4SkQ2xY7kTQaafF2Xbj96Jcts4c8Rg7","hash":"7Yv1ghzzCfpMsX2H1GXqMvWNpRgX3xWjDFqGosj5oLYQ","fields":{"id":"018f29debdcd7a929519243d0d555bbd"}},"transition_id:6nBDwmrYtpn9qDEQBMqJDKpcdB39EHSsLPGQMP5dkbrx":{"type":"transition_id","content_hash":"2JZ4RGaqQFEU21QMCarAgN1evhArv4XM6s9vzZobJ14X","hash":"App3mgTVce3PXKDwjwsTbMiRywqkUrVsCVqBpjdFZDGY","fields":{"id":"c8d765da-22ad-499c-be11-d4eee595b7b4"}},"workflow_task_id:2UrHsBZV5Zr4hEA6GvSZ21nPjjbEFdueCUeKERBh5daS":{"type":"workflow_task_id","content_hash":"3D5c7WbGNwqUKEvxbbPWbqo6pSdUGDwtSs2zZLFFCihD","hash":"EwCAXYpdH9bikALAPgxGeRJpjD8yHttr1QfpNjjNBXoF","fields":{"id":"065a56f6f5bd7dee80009fd7e470e999"}},"transition_id:D3izbzQygubwpvnUmaaKf78wNQLuhST1pYCvyHXZKpmJ":{"type":"transition_id","content_hash":"91YcT8LH1LRCXv17hMGrCZdKRMgHjCAVvm4huVsz9JQc","hash":"2Hcb94fYsFCz1UDZJ2EzEmh16Up7d8xF7e8n2GSyS5mp","fields":{"id":"b0d37151-b112-4ec8-af60-a237250fc4e3"}},"transition_id:8w3FiCcFFTFXbJiYCUyRGxDAehBTDFo7B4K13NfP9sxj":{"type":"transition_id","content_hash":"AbqJEmu2sA3WSFeQCs5jcPbAowhP5YCjcgRRdhz1yC2T","hash":"HwfcXFpCazpcZ6gZMQDjpcumJxVHa29GRBmRcSVnPDgb","fields":{"id":"018fe367-5d45-7483-bb97-ea640441ba0f"}},"transition_id:6Es8qAPvtzRDbWDsYHjJ5niYKt3CKiAZwxQTqBh7W1z4":{"type":"transition_id","content_hash":"8RBScwBLKRLnGbpai2mZG1R6ueW9ymKfM9t4RfPPCiti","hash":"DY7RNDgEQvFGvyTsJeg8bJ28saMizfSKJ1aftSBGqXDq","fields":{"id":"018fe367-5d2b-7b6c-9834-490946ecf9e8"}},"transition_id:Fannc9wiZbsF69HLiCi7TgQj65bNH5negaMkYEekgCxK":{"type":"transition_id","content_hash":"FV3MxoW9a7jEom6VAk121bWAMguuso7gzMyMVuiEkoPm","hash":"G3QxW647gjN2Zqsg5KwkAxGYN8NG6cKrg4F1xZ68zfMu","fields":{"id":"22a41d1a-1932-4886-8827-d004f37db7b7"}},"transition_id:Bc8aSz7WU1tWBMbqfAX22GHAfRkhU6P1Cz5Ro5kdexy2":{"type":"transition_id","content_hash":"FPQhDxHDa8ziZ34M364dhm8dz7xjozGPtat3Htk5iBvg","hash":"EEjVZAvGUQLtgLLXNCVNXxHj8fTTR1Rteew1RviZ2nNU","fields":{"id":"018fe367-5d3c-767f-8306-f0af67a40230"}},"transition_id:HsJ88g2TmRvh1nVZJyPDeSbkBDTSEmYKEbfzuZoy1xaQ":{"type":"transition_id","content_hash":"h35j49QvuBKxp8AxvQjxTzDSQ8UpZZNWmkfiJZaUsqB","hash":"2ium4nzAFqbK5RXnk5xGcY6AKcMTf448Td9K5fkn7TjN","fields":{"id":"b2e6aaf7-3089-4071-96ea-e181dbcaa603"}},"action:H9DP4myozFv4QzBuShCPyJLgDNEpUtuk1cNSasSMSPb1":{"type":"action","content_hash":"FMu3hsNV7SdbaFHCpQXe4YsxtfRZHq3LfQ8Ej6uv322w","hash":"CDXNu8XJkn4bBRzcx18z5UYnjXiUM2WB6hTMAwGhMQ4K","fields":{"ref":"core.http_request"}},"workflow_task_id:AcG14sbhxsRWrorrMKRB7wva8txtJfjeSorZ1ZZxGVND":{"type":"workflow_task_id","content_hash":"5QyQytybCJb7cotSJMF3QUnXHU6Km5QJhHKcZjqT6GAe","hash":"C4wyQGLNCfu7kZsKWbCKsqDPrNNXRqmKGpee9mL6e7JN","fields":{"id":"c3834df252de41218af26f0838250693"}},"transition_id:GG6qtzN97jwTa3cj9B8rcjubV3nTcGLyPZu12j3PSbEy":{"type":"transition_id","content_hash":"HjNV4A9aGhjgczDRQW8t7WifKDZaa1QQ8RwdrsXDANbo","hash":"93ULrXuPR6JrYqKzBUieG9EDvECXSDjQPVzPdnqYx32","fields":{"id":"018fe367-5d25-739c-9dd1-5242d16049c0"}},"workflow_task_id:4cRmWjii6phpWHa8LY8UgLG8bk7D5RcBDHDqwfJ7pKv2":{"type":"workflow_task_id","content_hash":"BnLPWzN7hmp4zJzYCmWLJaF6DTK8TpEVCgcPuCTfSqR3","hash":"9GTd9kmq4vATnJguxLAzMFsVLKnhX7B9SMLfHb9LtKEK","fields":{"id":"f927bbd66c0447998ca970171eab426d"}},"workflow:Df5bfAe5n1im6TcQwEQmiwQEStk7hkijhbU2ETeCVrkG":{"type":"workflow","content_hash":"C4oQUdiudUtzexWk1KMbV9ATMJ3xiGMZ1pdPXbNC7s8b","hash":"6fpQKdnQ1rKPn4cPPvUce28M4dUJnQ8ugTkEvCruMGhZ","fields":{"humanSecondsSaved":0,"notes":[{"id":"@@@workflow_note_id_ref1@@@"}],"output":[{"Device":"{{ CTX.Device.device_id }}"},{"MetricsList":"{{ CTX.MetricsList }}"}],"parameters":{"Device_stringified":{"type":"string","default":"","required":true,"multiline":false}},"tasks":[{"id":"@@@workflow_task_id_ref1@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{"params":{"array":[],"new_data":["{{ CTX.MemoryStatus }}","{{ CTX.OSDiskStatus }}"]}},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Set-MetricsList","next":[{"do":["@@@workflow_task_id_ref5@@@"],"from":null,"id":"@@@transition_id_ref1@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"MetricsList","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref2@@@","action":{"id":"@@@action_ref2@@@"},"humanSecondsSaved":0,"input":{"params":{"text":"{# Definitions Block #}\r\n{%- set var = namespace(MetricPercent=0,Criticality='none',Metrics=[],Thresholds={}) -%}\r\n{%- set MetricItem = 'Memory' -%}\r\n{% set var.MetricPercent = (CTX.Device.used_physical_memory_gb / CTX.Device.total_physical_memory_gb) * 100 %}\r\n{# Thresholds Evaluation #}\r\n{% for Threshold in CTX.Thresholds %}\r\n  {% if MetricItem in Threshold %}\r\n    {% set var.Thresholds = Threshold[MetricItem] %}\r\n  {% endif %}\r\n{% endfor %}\r\n{% if var.Thresholds %}\r\n  {%- if var.MetricPercent > var.Thresholds['Critical'] -%}\r\n    {% set var.Criticality = 'Critical' %}\r\n  {%- elif var.MetricPercent > var.Thresholds['Error'] -%}\r\n    {% set var.Criticality = 'Error' %}\r\n  {%- elif var.MetricPercent > var.Thresholds['Alert'] -%}\r\n    {% set var.Criticality = 'Alert' %}\r\n  {%- elif var.Thresholds['Alert'] > var.MetricPercent -%}\r\n    {% set var.Criticality = 'Normal' %}\r\n  {% elif 0 > var.MetricPercent %}\r\n    {%- set var.Criticality = 'Invalid' -%}\r\n  {% else %}\r\n    {%- set var.Criticality = 'Invalid' -%}\r\n  {% endif %}\r\n{% endif %}\r\n{# Result Handling #}\r\n{% set MetricJSON = ({\r\n    MetricItem: {\r\n        \"PercentValue\": var.MetricPercent,\r\n        \"State\": var.Criticality\r\n    }\r\n}) %}\r\n{{- MetricJSON -}}"}},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Set-MemoryStatus","next":[{"do":["@@@workflow_task_id_ref1@@@"],"from":null,"id":"@@@transition_id_ref2@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"MemoryStatus","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref3@@@","action":{"id":"@@@action_ref3@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Set-MetricStatuses","next":[{"do":["@@@workflow_task_id_ref2@@@","@@@workflow_task_id_ref9@@@","@@@workflow_task_id_ref6@@@","@@@workflow_task_id_ref4@@@","@@@workflow_task_id_ref8@@@"],"from":null,"id":"@@@transition_id_ref3@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref4@@@","action":{"id":"@@@action_ref2@@@"},"humanSecondsSaved":0,"input":{"params":{"text":"{{ None }}"}},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Set-PatchStatus","next":[{"do":["@@@workflow_task_id_ref1@@@"],"from":null,"id":"@@@transition_id_ref4@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref5@@@","action":{"id":"@@@action_ref3@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"END","next":[{"do":[],"from":null,"id":"@@@transition_id_ref5@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref6@@@","action":{"id":"@@@action_ref2@@@"},"humanSecondsSaved":0,"input":{"params":{"text":"{{ None }}"}},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Set-OnlineStatus","next":[{"do":["@@@workflow_task_id_ref1@@@"],"from":null,"id":"@@@transition_id_ref6@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref7@@@","action":{"id":"@@@action_ref3@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Get-Thresholds","next":[{"do":["@@@workflow_task_id_ref3@@@"],"from":null,"id":"@@@transition_id_ref7@@@","publish":[{"key":"Thresholds","value":"{{ template(\"018f59d0-c844-7eb1-bf1e-7b655beb364e\") | from_json_string }}"}],"to":null,"when":"{{ CTX.Device.is_server == true }}"},{"do":["@@@workflow_task_id_ref3@@@"],"from":null,"id":"@@@transition_id_ref8@@@","publish":[{"key":"Thresholds","value":"{{ template(\"018f59d1-82aa-7ef6-8e69-7519cad1f9f5\") | from_json_string }}"}],"to":null,"when":"{{ CTX.Device.is_server == false }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref8@@@","action":{"id":"@@@action_ref2@@@"},"humanSecondsSaved":0,"input":{"params":{"text":"{# Definitions Block #}\r\n{%- set var = namespace(MetricPercent=0,Criticality='none',Metrics=[],Thresholds={}) -%}\r\n{%- set MetricItem = 'OSDisk' -%}\r\n{% for disk in CTX.Device.disk_info %}\r\n  {% if disk.DeviceID == \"C:\" %}\r\n    {% set var.MetricPercent = ((disk.SizeGB - disk.FreeSpaceGB) / disk.SizeGB) * 100 %}\r\n  {% endif %}\r\n{% endfor %}\r\n{# Thresholds Evaluation #}\r\n{% for Threshold in CTX.Thresholds %}\r\n  {% if MetricItem in Threshold %}\r\n    {% set var.Thresholds = Threshold[MetricItem] %}\r\n  {% endif %}\r\n{% endfor %}\r\n{% if var.Thresholds %}\r\n  {%- if var.MetricPercent > var.Thresholds['Critical'] -%}\r\n    {% set var.Criticality = 'Critical' %}\r\n  {%- elif var.MetricPercent > var.Thresholds['Error'] -%}\r\n    {% set var.Criticality = 'Error' %}\r\n  {%- elif var.MetricPercent > var.Thresholds['Alert'] -%}\r\n    {% set var.Criticality = 'Alert' %}\r\n  {%- elif var.Thresholds['Alert'] > var.MetricPercent -%}\r\n    {% set var.Criticality = 'Normal' %}\r\n  {% elif 0 > var.MetricPercent %}\r\n    {%- set var.Criticality = 'Invalid' -%}\r\n  {% else %}\r\n    {%- set var.Criticality = 'Invalid' -%}\r\n  {% endif %}\r\n{% endif %}\r\n{# Result Handling #}\r\n{% set MetricJSON = ({\r\n    MetricItem: {\r\n        \"PercentValue\": var.MetricPercent,\r\n        \"State\": var.Criticality\r\n    }\r\n}) %}\r\n{{- MetricJSON -}}"}},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Set-OSDiskStatus","next":[{"do":["@@@workflow_task_id_ref1@@@"],"from":null,"id":"@@@transition_id_ref9@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"OSDiskStatus","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref9@@@","action":{"id":"@@@action_ref2@@@"},"humanSecondsSaved":0,"input":{"params":{"text":"{{ None }}"}},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Set-CPUStatus","next":[{"do":["@@@workflow_task_id_ref1@@@"],"from":null,"id":"@@@transition_id_ref10@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref10@@@","action":{"id":"@@@action_ref3@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"START","next":[{"do":["@@@workflow_task_id_ref7@@@"],"from":null,"id":"@@@transition_id_ref11@@@","publish":[{"key":"Device","value":"{{ CTX.Device_stringified | from_json_string }}"}],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null}],"timeout":28800,"type":"STANDARD","varsSchema":{}},"nonfunctional_fields":{"description":"","name":"Get-AlertableMetrics","notes[0].content":"## What's Occurring: Task Overview\n\n1. **START**: This task doesn't perform any action.\n2. **Server_vs_WS**: This task also doesn't perform any action, but it sets different thresholds depending on whether the device is a server or not.\n3. **Set-MetricStatuses**: This task doesn't perform any action but leads to several other tasks.\n4. **Set-MemoryStatus, Set-CPUStatus, Set-OnlineStatus, Set-PatchStatus, Set-MemoryStatus**: These tasks set variables based on previous actions.\n\n## Expected Outcome\n\nThe process starts with no action, then sets thresholds based on the type of device. It then leads to several tasks that set various status metrics.\n\n## Special Considerations\n\nNo special considerations are needed for this process as there are no user-supplied inputs or parameters. The flow of tasks is determined based on the type of device and the outcome of previous tasks.","notes[0].metadata":{"x":156.2181757146662,"y":163.4545454545454,"fill":"rgba(66, 158, 255, 0.05)","width":1200,"height":1000,"stroke":"rgba(66, 158, 255, 0.7)","fillEnabled":true},"notes[0].title":"JSON Process Documentation","parameters.Device_stringified.description":"","parameters.Device_stringified.label":"","tasks[0].description":"Append to a List","tasks[0].metadata":{"x":576,"y":1008.0000000000001},"tasks[0].next[0].label":"","tasks[1].description":"Set a variable as an action","tasks[1].metadata":{"x":191.99999999999997,"y":648},"tasks[1].next[0].label":"","tasks[2].description":"Action that does nothing","tasks[2].metadata":{"x":576.0000000000001,"y":480},"tasks[2].next[0].label":"","tasks[3].description":"Set a variable as an action","tasks[3].metadata":{"x":768,"y":791.9999999999999},"tasks[3].next[0].label":"","tasks[4].description":"Action that does nothing","tasks[4].metadata":{"x":576,"y":1200},"tasks[4].next[0].label":"","tasks[5].description":"Set a variable as an action","tasks[5].metadata":{"x":576.0000000000001,"y":648},"tasks[5].next[0].label":"","tasks[6].description":"Action that does nothing","tasks[6].metadata":{"x":576.0000000000001,"y":335.99999999999994},"tasks[6].next[0].label":"Server","tasks[6].next[1].label":"Workstation","tasks[7].description":"Set a variable as an action","tasks[7].metadata":{"x":960,"y":648},"tasks[7].next[0].label":"","tasks[8].description":"Set a variable as an action","tasks[8].metadata":{"x":384,"y":791.9999999999999},"tasks[8].next[0].label":"","tasks[9].description":"Action that does nothing","tasks[9].metadata":{"x":576,"y":192},"tasks[9].next[0].label":""},"references":{"action_ref3":{"kind":"string","type":"action","src_key_hash":"EP5vDxnDjrYnpHo1dbtz8YCrvEq3jKHngkLwkfJqAx58","content_hash":"CdPL6KHuhM7mBvTHi4QnQbxCitnoxuRrq1BfHNnQYzKB","locations":["tasks[2].action.id","tasks[4].action.id","tasks[6].action.id","tasks[9].action.id"]},"workflow_task_id_ref3":{"kind":"string","type":"workflow_task_id","src_key_hash":"9RVPJ2axWfzsJPjQceeYjYA7A72hgutHmQF3Zi8csz2r","content_hash":"8xvbWFZAw8JtVtDDXZYqnPpo3FdxKiGZi94EdV4hkcQA","locations":["tasks[2].id","tasks[6].next[0].do[0]","tasks[6].next[1].do[0]"]},"workflow_note_id_ref1":{"kind":"string","type":"workflow_note_id","src_key_hash":"2HXAcNQiaqFYQbR6gPcUFMDcZhmZrBy19thoFWJ93CWL","content_hash":"3iNqcghfHsQMozNAd96oTBwu4DWYva4k3js5V9ASQJW7","locations":["notes[0].id"]},"workflow_task_id_ref5":{"kind":"string","type":"workflow_task_id","src_key_hash":"AcG14sbhxsRWrorrMKRB7wva8txtJfjeSorZ1ZZxGVND","content_hash":"5QyQytybCJb7cotSJMF3QUnXHU6Km5QJhHKcZjqT6GAe","locations":["tasks[4].id","tasks[0].next[0].do[0]"]},"workflow_task_id_ref9":{"kind":"string","type":"workflow_task_id","src_key_hash":"3WfjjreaxgNXUkHtrbtWfpxXCF9KiieE8W7EXSfeoer3","content_hash":"FUkJ6TTvmxa2YXrasR73RjVQaNJSN8Z4bMMwKWCsMjAA","locations":["tasks[8].id","tasks[2].next[0].do[1]"]},"workflow_task_id_ref7":{"kind":"string","type":"workflow_task_id","src_key_hash":"CCQBUH499sBpUiqa365pHCYthEe3G2nfysnSWyougByV","content_hash":"C5pJPRj8ujgurdXxNhX77sHuvcdHFQCMZ8ywAYnBhobJ","locations":["tasks[6].id","tasks[9].next[0].do[0]"]},"workflow_task_id_ref6":{"kind":"string","type":"workflow_task_id","src_key_hash":"Cu9FqoWArgZEdR9kRj3hFV1RzhMgVrWsgJ1TERB1gnhF","content_hash":"EpRzrMQh7U7ZzVMSSvsDQ4XAyybFnMyPcshEdutfVvq7","locations":["tasks[5].id","tasks[2].next[0].do[2]"]},"transition_id_ref7":{"kind":"string","type":"transition_id","src_key_hash":"6nBDwmrYtpn9qDEQBMqJDKpcdB39EHSsLPGQMP5dkbrx","content_hash":"2JZ4RGaqQFEU21QMCarAgN1evhArv4XM6s9vzZobJ14X","locations":["tasks[6].next[0].id"]},"transition_id_ref2":{"kind":"string","type":"transition_id","src_key_hash":"Fannc9wiZbsF69HLiCi7TgQj65bNH5negaMkYEekgCxK","content_hash":"FV3MxoW9a7jEom6VAk121bWAMguuso7gzMyMVuiEkoPm","locations":["tasks[1].next[0].id"]},"workflow_task_id_ref4":{"kind":"string","type":"workflow_task_id","src_key_hash":"BkEBoe1Fg5YAAbtSywamwkBeVF7xHY6auHmXj9nvFudC","content_hash":"J8sSRg2JL9CNF2DEQs6fJVYRnF8f5yLaRvBMo8ieJLpM","locations":["tasks[3].id","tasks[2].next[0].do[3]"]},"workflow_task_id_ref1":{"kind":"string","type":"workflow_task_id","src_key_hash":"BjfBEAkj6t7WSSG9h3oBkQ1HMTWpjFpiYTXGaYZUy34g","content_hash":"CzKLiKTVVdzoPEPAgb52nbBMu2tmJGBgtHd9vSNYyLhf","locations":["tasks[0].id","tasks[1].next[0].do[0]","tasks[3].next[0].do[0]","tasks[5].next[0].do[0]","tasks[7].next[0].do[0]","tasks[8].next[0].do[0]"]},"transition_id_ref11":{"kind":"string","type":"transition_id","src_key_hash":"524Z26aZJREdruDuVnEBmxoo5RktwfZruXUd4haHQjS8","content_hash":"41kjmgsfD4pK5Dadh37Gfiaj5PJoiq3js5vfWQ7m7A23","locations":["tasks[9].next[0].id"]},"transition_id_ref6":{"kind":"string","type":"transition_id","src_key_hash":"6ZQdNDwc5kWFiuNza5TgGMFHQ3S9dhZsLrJT7M25ZUob","content_hash":"9hX63WqBK7GhvAsTMWSZQgz671SZHfaXN68MT2D71g6P","locations":["tasks[5].next[0].id"]},"workflow_task_id_ref8":{"kind":"string","type":"workflow_task_id","src_key_hash":"Hnay81yeZHCXXEAG7fRvmMQfU6ZFctKBcZAAaFFnjrR5","content_hash":"5F4UDWkHdPmdbwbqXqCGJf33pKZA9g4Wg8W1U3cK98M9","locations":["tasks[7].id","tasks[2].next[0].do[4]"]},"transition_id_ref9":{"kind":"string","type":"transition_id","src_key_hash":"4M1yTkfgp4tCnwdZ2CEZe6GHur7BgAgYX6mnMLWLtuYw","content_hash":"FMhXeNvEKJaidHAsEsNDGVVGdG48gYfENokgdDCZT6uB","locations":["tasks[7].next[0].id"]},"transition_id_ref5":{"kind":"string","type":"transition_id","src_key_hash":"9RF1fKNm1xPZXQu3AJyRBxqQaET3kwi2imWQTUUmHp3B","content_hash":"CLdFrLY2BiRsFsg3qmNUA4bEa7kbDsVs5ysaNsPpGDB6","locations":["tasks[4].next[0].id"]},"transition_id_ref4":{"kind":"string","type":"transition_id","src_key_hash":"D3izbzQygubwpvnUmaaKf78wNQLuhST1pYCvyHXZKpmJ","content_hash":"91YcT8LH1LRCXv17hMGrCZdKRMgHjCAVvm4huVsz9JQc","locations":["tasks[3].next[0].id"]},"transition_id_ref3":{"kind":"string","type":"transition_id","src_key_hash":"D7K7M9Po2mSpjKKUfdPPk7sDkBx6ESJHkPZvrRrfg1XH","content_hash":"3xghs1kkLr9YePSFrhzHzMJZQgeJkVvr4tRoANqdLBGF","locations":["tasks[2].next[0].id"]},"action_ref2":{"kind":"string","type":"action","src_key_hash":"8GkwDvknUKBzMyCbv8sYaUuYQkAAerFCR5Ly91bdzM1i","content_hash":"Aj7g63oBpFTyTLgcv25UHmfMB5WmghbjNdHZYGy7KxYN","locations":["tasks[1].action.id","tasks[3].action.id","tasks[5].action.id","tasks[7].action.id","tasks[8].action.id"]},"transition_id_ref8":{"kind":"string","type":"transition_id","src_key_hash":"Dp7RETdzX84aKcNuRsUMwHiXuwhTCMeF4AiYdpfxjtyj","content_hash":"KGmSSfCKcxyjzNse88e6A1sooVb645VRDVNgk2H6bPw","locations":["tasks[6].next[1].id"]},"workflow_task_id_ref2":{"kind":"string","type":"workflow_task_id","src_key_hash":"HtuGm84FTujgu5JwB3urDFzgt3jSnBLdNppr8kbLPoe9","content_hash":"EPRsHefAzR3VvvST8YTfBvCTuoeJAXabKrdKeYa6UFSp","locations":["tasks[1].id","tasks[2].next[0].do[0]"]},"action_ref1":{"kind":"string","type":"action","src_key_hash":"GqvM37n6PXEaDtiujJ64D371g2zLDPT5p2zQ42dshqyf","content_hash":"FfjNcHvH2G69Vg7vjYYE7k9sKjFCDWYKcrP19ZFX7JzL","locations":["tasks[0].action.id"]},"workflow_task_id_ref10":{"kind":"string","type":"workflow_task_id","src_key_hash":"4cRmWjii6phpWHa8LY8UgLG8bk7D5RcBDHDqwfJ7pKv2","content_hash":"BnLPWzN7hmp4zJzYCmWLJaF6DTK8TpEVCgcPuCTfSqR3","locations":["tasks[9].id"]},"transition_id_ref1":{"kind":"string","type":"transition_id","src_key_hash":"4kXym9cVX4ixVBaqLxQF3xxRuiEzhXJumjJiZoVSLGC6","content_hash":"AnWQnJcAWWwF8ZsmiNduQQW5PPUYKahR4Kd5365AANWd","locations":["tasks[0].next[0].id"]},"transition_id_ref10":{"kind":"string","type":"transition_id","src_key_hash":"7JBobH52jvQRutpSYL45YjWPhzNywXjzhkhHURev7SqV","content_hash":"DtTyje8eRxNy8bMPCGCJTQq1SexzXgzDFEZq8VbTrEzW","locations":["tasks[8].next[0].id"]}},"dependencies":["transition_id:4M1yTkfgp4tCnwdZ2CEZe6GHur7BgAgYX6mnMLWLtuYw","workflow_task_id:Cu9FqoWArgZEdR9kRj3hFV1RzhMgVrWsgJ1TERB1gnhF","action:8GkwDvknUKBzMyCbv8sYaUuYQkAAerFCR5Ly91bdzM1i","workflow_task_id:3WfjjreaxgNXUkHtrbtWfpxXCF9KiieE8W7EXSfeoer3","transition_id:D7K7M9Po2mSpjKKUfdPPk7sDkBx6ESJHkPZvrRrfg1XH","workflow_task_id:9RVPJ2axWfzsJPjQceeYjYA7A72hgutHmQF3Zi8csz2r","transition_id:6nBDwmrYtpn9qDEQBMqJDKpcdB39EHSsLPGQMP5dkbrx","action:EP5vDxnDjrYnpHo1dbtz8YCrvEq3jKHngkLwkfJqAx58","action:GqvM37n6PXEaDtiujJ64D371g2zLDPT5p2zQ42dshqyf","transition_id:4kXym9cVX4ixVBaqLxQF3xxRuiEzhXJumjJiZoVSLGC6","transition_id:Dp7RETdzX84aKcNuRsUMwHiXuwhTCMeF4AiYdpfxjtyj","workflow_note_id:2HXAcNQiaqFYQbR6gPcUFMDcZhmZrBy19thoFWJ93CWL","workflow_task_id:CCQBUH499sBpUiqa365pHCYthEe3G2nfysnSWyougByV","workflow_task_id:HtuGm84FTujgu5JwB3urDFzgt3jSnBLdNppr8kbLPoe9","transition_id:7JBobH52jvQRutpSYL45YjWPhzNywXjzhkhHURev7SqV","transition_id:D3izbzQygubwpvnUmaaKf78wNQLuhST1pYCvyHXZKpmJ","workflow_task_id:BjfBEAkj6t7WSSG9h3oBkQ1HMTWpjFpiYTXGaYZUy34g","transition_id:Fannc9wiZbsF69HLiCi7TgQj65bNH5negaMkYEekgCxK","workflow_task_id:BkEBoe1Fg5YAAbtSywamwkBeVF7xHY6auHmXj9nvFudC","workflow_task_id:AcG14sbhxsRWrorrMKRB7wva8txtJfjeSorZ1ZZxGVND","transition_id:524Z26aZJREdruDuVnEBmxoo5RktwfZruXUd4haHQjS8","workflow_task_id:Hnay81yeZHCXXEAG7fRvmMQfU6ZFctKBcZAAaFFnjrR5","transition_id:6ZQdNDwc5kWFiuNza5TgGMFHQ3S9dhZsLrJT7M25ZUob","transition_id:9RF1fKNm1xPZXQu3AJyRBxqQaET3kwi2imWQTUUmHp3B","workflow_task_id:4cRmWjii6phpWHa8LY8UgLG8bk7D5RcBDHDqwfJ7pKv2"]},"workflow:3h1xX2UPtepv6WfQuw1cuUDLmY21cvvbnqDvJ7ts1LR3":{"type":"workflow","content_hash":"Gu1dKYcdwjxL3mbDSHE4KTuTDbDDTNi1vpFu218PgTcG","hash":"4jaFxe9XrpvmS6Km3ma5xhVsgfBxR45D4M2mf4Z3B8aU","fields":{"humanSecondsSaved":0,"notes":[{"id":"@@@workflow_note_id_ref1@@@"}],"output":[{"output":"{{ CTX.output|d }}"},{"errors":"{{ CTX.errors|d([]) }}"},{"options":"{{ CTX.output|d }}"}],"parameters":{"top":{"type":"string","required":false,"multiline":false},"limit":{"type":"string","required":false,"multiline":false},"row_key":{"type":"string","required":false,"multiline":false},"contents":{"type":"string","required":false,"multiline":false},"operation":{"type":"string","required":true,"multiline":false},"table_name":{"type":"string","default":"","required":false,"multiline":false},"partition_key":{"type":"string","required":false,"multiline":false},"selected_fields":{"type":"array","default":"{{ [  ] }}","required":false,"multiline":false},"query_expression":{"type":"string","required":false,"multiline":false},"storage_account_name":{"type":"string","required":true,"multiline":false}},"tasks":[{"id":"@@@workflow_task_id_ref1@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"START","next":[{"do":["@@@workflow_task_id_ref5@@@"],"from":null,"id":"@@@transition_id_ref1@@@","publish":[{"key":"top","value":"{{ CTX.top|d if CTX.top|d and CTX.top|d != None else \"\" }}"},{"key":"limit","value":"{{ CTX.limit|d if CTX.limit|d and CTX.limit|d != None else \"\" }}"}],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref2@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"handle_failures","next":[{"do":["@@@workflow_task_id_ref10@@@"],"from":null,"id":"@@@transition_id_ref2@@@","publish":[],"to":null,"when":"{{\n    CTX.try_count < CTX.max_tries\n    and\n    CTX.operation in\n        [\n            \"insert\",\n            \"merge\",\n            \"update\",\n            \"upsert_merge\",\n            \"upsert_replace\"\n        ]\n}}"},{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref3@@@","publish":[],"to":null,"when":"{{ CTX.try_count < CTX.max_tries }}"},{"do":[],"from":null,"id":"@@@transition_id_ref4@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_FIRST","with":null},{"id":"@@@workflow_task_id_ref3@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"handle_failures","next":[{"do":["@@@workflow_task_id_ref9@@@"],"from":null,"id":"@@@transition_id_ref5@@@","publish":[],"to":null,"when":"{{ CTX.try_count < CTX.max_tries }}"},{"do":[],"from":null,"id":"@@@transition_id_ref6@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_FIRST","with":null},{"id":"@@@workflow_task_id_ref4@@@","action":{"id":"@@@action_ref2@@@"},"humanSecondsSaved":0,"input":{"url":"{{-\n    'https://'\n    ~ CTX.storage_account_name\n    ~ '.'\n    ~ CTX.ms_tables_url\n    ~ '/'\n    ~ CTX.path\n-}}","body":"{{ CTX.body|d(none) | to_json_string }}","json":null,"files":[],"method":"{{ CTX.method }}","params":{},"cookies":null,"headers":{"Accept":"application/json","If-Match":"*","x-ms-date":"{{ now(dt_format='datetime') | format_datetime(output_format='%a, %d %b %Y %H:%M:%S GMT') }}","Content-Type":"application/json;odata=fullmetadata","x-ms-version":"2023-11-03","Authorization":"{%- set account_name = CTX.storage_account_name -%}\n{%- set access_key = ORG.VARIABLES[\"storage_account_\" ~ account_name ~ \"_access_key\"] |d -%}\n{%- if not access_key -%}\n    {{- \"ERROR: Unable to retrieve org variable for access key to storage account \" ~ account_name -}}\n{%- else -%}\n    {%- set date = now(dt_format='datetime') | format_datetime(output_format='%a, %d %b %Y %H:%M:%S GMT') -%}\n    {%- set canonicalized_resource = \"/\" ~ account_name ~ \"/\" ~ CTX.path -%}\n    {%- set string_to_sign = date ~ \"\\n\" ~ canonicalized_resource -%}\n    {%- set decoded_key = access_key | decode_base64(as_bytes=True)  -%}\n    {%- set signature = string_to_sign | hmac('sha256', decoded_key) | base64 -%}\n\n    {{- \"SharedKeyLite \" ~ account_name ~ \":\" ~ signature -}}\n{%- endif -%}"},"timeout":300,"auth_password":null,"auth_username":null,"allow_redirects":true,"require_2xx_status":true},"isMocked":false,"join":1,"mockInput":{"mock_result":{}},"name":"delete_record","next":[{"do":["@@@workflow_task_id_ref8@@@"],"from":null,"id":"@@@transition_id_ref7@@@","publish":[{"key":"try_count","value":"{{ CTX.try_count|d(0) + 1 }}"},{"key":"errors","value":"{%- if RESULT.result.errors|d -%}\n    {%- do CTX.errors.append(RESULT.result.errors|d) -%}\n    {{- CTX.errors|d -}}\n{%- else -%}\n    {{- CTX.errors|d -}}\n{%- endif -%}"}],"to":null,"when":"{{ FAILED }}"},{"do":[],"from":null,"id":"@@@transition_id_ref8@@@","publish":[{"key":"output","value":"{{ RESULT.result.data.value|d or RESULT.result.data|d }}"}],"to":null,"when":""}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref5@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"choose_operation","next":[{"do":[],"from":null,"id":"@@@transition_id_ref9@@@","publish":[{"key":"errors","value":"{%- do CTX.errors.append(\"ORG Variable not set up to look up the access key for \" ~ CTX.storage_account_name) -%}\n{{- CTX.errors -}}"},{"key":"todo","value":"logic to set up org var using ARM"}],"to":null,"when":"{{ not ORG.VARIABLES[\"storage_account_\"~CTX.storage_account_name~\"_access_key\"] |d }}"},{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref10@@@","publish":[{"key":"operation_summary","value":"The Query Entities operation queries entities in a table and includes the $filter and $select options."},{"key":"operation_docs","value":"https://learn.microsoft.com/en-us/rest/api/storageservices/query-entities"},{"key":"method","value":"GET"},{"key":"path","value":"{#- {{- CTX.table_name -}}\n{%- if ((CTX.row_key or CTX.partition_key) and not (CTX.row_key and CTX.partition_key)) or CTX.query_expression|d -%}\n    {{- '()' -}}\n{%- endif -%} -#}\n{{- CTX.table_name -}}\n{#- {%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \"(\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d -%}\n    {{- \"PartitionKey='\" ~ CTX.partition_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d and CTX.row_key|d -%}\n    {{- \",\" -}}\n{%- endif -%}\n{%- if CTX.row_key|d -%}\n    {{- \"RowKey='\" ~ CTX.row_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \")\" -}}\n{%- endif -%} -#}"},{"key":"parameters","value":"{%- set params = '()' -%}\n\n{#- use explicitly given query_text if provided -#}\n{%- if not CTX.query_expression|d -%}\n\n    {#- otherwise, use row and partition keys if BOTH are supplied. If only one, then this is done with Filters -#}\n    {%- if CTX.partition_key and CTX.row_key -%}\n        {%- set params = \"(PartitionKey='\" ~ CTX.partition_key ~ \"',RowKey='\" ~ CTX.row_key ~ \"')\" -%}\n    {%- endif -%}\n\n{%- endif -%}\n\n{{- params -}}"},{"key":"filters","value":"{%- set filter_string = '' -%}\n\n{#- only use this if query_expression was not supplied -#}\n{%- if not CTX.query_expression|d -%}\n\n\n    {# Use filter logic to select by row or partition key ONLY if one of the two are chosen. If both, then do this with Path Parameters, not Filters #}\n    {%- if CTX.row_key and not CTX.partition_key|d -%}\n        {%- set filter_string = \"?$filter=RowKey eq '\" ~ CTX.row_key ~ \"'\" -%}\n    {%- elif CTX.partition_key|d and not CTX.row_key|d -%}\n        {%- set filter_string = \"?$filter=PartitionKey eq '\" ~ CTX.partition_key ~ \"'\" -%}\n    {%- endif -%}\n\n\n    {#- if field selectors chosen -#}\n    {%- if (CTX.selected_fields|d or []) | length > 0 -%}\n        {#- prepend a & if adding to existing string, or a ? if new -#}\n        {%- set filter_string = (filter_string ~ '&') if filter_string else '?' -%}\n        {%- set filter_string = filter_string ~ \"$select=\" ~ (CTX.selected_fields | join(',')) -%}\n    {%- endif -%}\n\n{%- else -%}\n\n    {%- set filter_string = CTX.query_expression -%}\n\n{%- endif -%}\n\n{#- output the string, doing url encoding -#}\n{{- filter_string|d | replace(\"'\",\"%27\") | replace(' ', '%20') -}}"},{"key":"limit","value":"{%- if CTX.limit|d and CTX.limit|d(0)|int > 0 -%}\n    {{- CTX.limit|int -}}\n{%- else -%}\n    {{- None -}}\n{%- endif -%}"},{"key":"top","value":"{%- if CTX.top|d and CTX.top|d(0)|int > 0 -%}\n    {{- '&$top='~CTX.top|int -}}\n{%- elif CTX.limit|d and CTX.limit|d < 1000 -%}\n    {{- '&$top='~CTX.limit|int -}}\n{%- else -%}\n    {{- \"\" -}}\n{%- endif -%}"}],"to":null,"when":"{{ CTX.operation|d == \"query\" }}"},{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref11@@@","publish":[{"key":"operation_summary","value":"The Insert Entity operation inserts a new entity into a table."},{"key":"operation_docs","value":"https://learn.microsoft.com/en-us/rest/api/storageservices/insert-entity"},{"key":"method","value":"POST"},{"key":"path","value":"{{ CTX.table_name }}"},{"key":"body","value":"{%- set contents_object = CTX.contents | from_json_string -%}\n{%- if contents_object.PartitionKey and contents_object.RowKey -%}\n    {{- contents_object | to_json_string -}}\n{%- elif CTX.partition_key and CTX.row_key -%}\n    {%- do contents_object.update(\n        {\n            \"PartitionKey\": CTX.partition_key,\n            \"RowKey\": CTX.row_key\n        })\n    -%}\n    {{- contents_object | to_json_string -}}\n{%- else -%}\n    {{ \"ERROR: RowKey and PartitionKey were not provided! They must either be in the contents JSON or supplied as inputs.\" }}\n{%- endif -%}"}],"to":null,"when":"{{ CTX.operation|d == \"insert\" }}"},{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref12@@@","publish":[{"key":"operation_summary","value":"The Update Entity operation updates an existing entity in a table. The Update Entity operation replaces the entire entity, and you can use the operation to remove properties."},{"key":"operation_docs","value":"https://learn.microsoft.com/en-us/rest/api/storageservices/update-entity2"},{"key":"method","value":"PUT"},{"key":"path","value":"{{- CTX.table_name -}}\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \"(\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d -%}\n    {{- \"PartitionKey='\" ~ CTX.partition_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d and CTX.row_key|d -%}\n    {{- \",\" -}}\n{%- endif -%}\n{%- if CTX.row_key|d -%}\n    {{- \"RowKey='\" ~ CTX.row_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \")\" -}}\n{%- endif -%}"},{"key":"body","value":"{%- set contents_object = CTX.contents | from_json_string -%}\n{%- if contents_object.PartitionKey and contents_object.RowKey -%}\n    {{- contents_object | to_json_string -}}\n{%- elif CTX.partition_key and CTX.row_key -%}\n    {%- do contents_object.update(\n        {\n            \"PartitionKey\": CTX.partition_key,\n            \"RowKey\": CTX.row_key\n        })\n    -%}\n    {{- contents_object | to_json_string -}}\n{%- else -%}\n    {{ \"ERROR: RowKey and PartitionKey were not provided! They must either be in the contents JSON or supplied as inputs.\" }}\n{%- endif -%}"}],"to":null,"when":"{{ CTX.operation|d == \"update\" }}"},{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref13@@@","publish":[{"key":"operation_summary","value":"The Merge Entity operation updates an existing entity by updating the entity's properties. This operation does not replace the existing entity, as the Update Entity operation does."},{"key":"operation_docs","value":"https://learn.microsoft.com/en-us/rest/api/storageservices/merge-entity"},{"key":"method","value":"MERGE"},{"key":"path","value":"{{- CTX.table_name -}}(PartitionKey='{{- CTX.partition_key -}}',RowKey='{{- CTX.row_key -}}')\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \"(\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d -%}\n    {{- \"PartitionKey='\" ~ CTX.partition_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d and CTX.row_key|d -%}\n    {{- \",\" -}}\n{%- endif -%}\n{%- if CTX.row_key|d -%}\n    {{- \"RowKey='\" ~ CTX.row_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \")\" -}}\n{%- endif -%}"},{"key":"body","value":"{%- set contents_object = CTX.contents | from_json_string -%}\n{%- if contents_object.PartitionKey and contents_object.RowKey -%}\n    {{- contents_object | to_json_string -}}\n{%- elif CTX.partition_key and CTX.row_key -%}\n    {%- do contents_object.update(\n        {\n            \"PartitionKey\": CTX.partition_key,\n            \"RowKey\": CTX.row_key\n        })\n    -%}\n    {{- contents_object | to_json_string -}}\n{%- else -%}\n    {{ \"ERROR: RowKey and PartitionKey were not provided! They must either be in the contents JSON or supplied as inputs.\" }}\n{%- endif -%}"}],"to":null,"when":"{{ CTX.operation|d == \"merge\" }}"},{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref14@@@","publish":[{"key":"operation_summary","value":"The Insert Or Replace Entity operation replaces an existing entity, or inserts a new entity if it doesn't exist in the table. Because this operation can insert or update an entity, it's also known as an upsert operation."},{"key":"operation_docs","value":"https://learn.microsoft.com/en-us/rest/api/storageservices/insert-or-replace-entity"},{"key":"method","value":"PUT"},{"key":"path","value":"{{- CTX.table_name -}}\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \"(\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d -%}\n    {{- \"PartitionKey='\" ~ CTX.partition_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d and CTX.row_key|d -%}\n    {{- \",\" -}}\n{%- endif -%}\n{%- if CTX.row_key|d -%}\n    {{- \"RowKey='\" ~ CTX.row_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \")\" -}}\n{%- endif -%}"},{"key":"body","value":"{%- set contents_object = CTX.contents | from_json_string -%}\n{%- if contents_object.PartitionKey and contents_object.RowKey -%}\n    {{- contents_object | to_json_string -}}\n{%- elif CTX.partition_key and CTX.row_key -%}\n    {%- do contents_object.update(\n        {\n            \"PartitionKey\": CTX.partition_key,\n            \"RowKey\": CTX.row_key\n        })\n    -%}\n    {{- contents_object | to_json_string -}}\n{%- else -%}\n    {{ \"ERROR: RowKey and PartitionKey were not provided! They must either be in the contents JSON or supplied as inputs.\" }}\n{%- endif -%}"}],"to":null,"when":"{{ CTX.operation|d == \"upsert_replace\" }}"},{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref15@@@","publish":[{"key":"operation_summary","value":"The Insert Or Merge Entity operation updates an existing entity, or inserts a new entity if it doesn't exist in the table. Because this operation can insert or update an entity, it's also known as an upsert operation."},{"key":"operation_docs","value":"https://learn.microsoft.com/en-us/rest/api/storageservices/insert-or-merge-entity"},{"key":"method","value":"MERGE"},{"key":"path","value":"{{- CTX.table_name -}}\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \"(\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d -%}\n    {{- \"PartitionKey='\" ~ CTX.partition_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d and CTX.row_key|d -%}\n    {{- \",\" -}}\n{%- endif -%}\n{%- if CTX.row_key|d -%}\n    {{- \"RowKey='\" ~ CTX.row_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \")\" -}}\n{%- endif -%}"},{"key":"body","value":"{%- set contents_object = CTX.contents | from_json_string -%}\n{%- if contents_object.PartitionKey and contents_object.RowKey -%}\n    {{- contents_object | to_json_string -}}\n{%- elif CTX.partition_key and CTX.row_key -%}\n    {%- do contents_object.update(\n        {\n            \"PartitionKey\": CTX.partition_key,\n            \"RowKey\": CTX.row_key\n        })\n    -%}\n    {{- contents_object | to_json_string -}}\n{%- else -%}\n    {{ \"ERROR: RowKey and PartitionKey were not provided! They must either be in the contents JSON or supplied as inputs.\" }}\n{%- endif -%}"}],"to":null,"when":"{{ CTX.operation|d == \"upsert_merge\" }}"},{"do":["@@@workflow_task_id_ref4@@@"],"from":null,"id":"@@@transition_id_ref16@@@","publish":[{"key":"operation_summary","value":"The Delete Entity operation deletes an existing entity in a table."},{"key":"operation_docs","value":"https://learn.microsoft.com/en-us/rest/api/storageservices/delete-entity1"},{"key":"method","value":"DELETE"},{"key":"path","value":"{{- CTX.table_name -}}\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \"(\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d -%}\n    {{- \"PartitionKey='\" ~ CTX.partition_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d and CTX.row_key|d -%}\n    {{- \",\" -}}\n{%- endif -%}\n{%- if CTX.row_key|d -%}\n    {{- \"RowKey='\" ~ CTX.row_key ~ \"'\" -}}\n{%- endif -%}\n{%- if CTX.partition_key|d or CTX.row_key|d -%}\n    {{- \")\" -}}\n{%- endif -%}"}],"to":null,"when":"{{ CTX.operation|d == \"delete\" }}"},{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref17@@@","publish":[{"key":"operation_summary","value":"The Query Tables operation returns a list of tables under the specified account."},{"key":"operation_docs","value":"https://learn.microsoft.com/en-us/rest/api/storageservices/query-tables"},{"key":"method","value":"GET"},{"key":"path","value":"Tables"}],"to":null,"when":"{{ CTX.operation|d == \"list_tables\" }}"},{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref18@@@","publish":[{"key":"operation_summary","value":"The Create Table operation creates a new table in a storage account."},{"key":"operation_docs","value":"https://learn.microsoft.com/en-us/rest/api/storageservices/create-table"},{"key":"method","value":"POST"},{"key":"path","value":"Tables"},{"key":"body","value":"{\"TableName\": \"{{ CTX.table_name }}\"}"}],"to":null,"when":"{{ CTX.operation|d == \"create_table\" }}"},{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref19@@@","publish":[{"key":"operation_summary","value":"The Delete Table operation deletes the specified table and any data it contains."},{"key":"operation_docs","value":"https://learn.microsoft.com/en-us/rest/api/storageservices/delete-table"},{"key":"method","value":"DELETE"},{"key":"path","value":"Tables('{{ CTX.table_name }}')"}],"to":null,"when":"{{ CTX.operation|d == \"delete_table\" }}"},{"do":[],"from":null,"id":"@@@transition_id_ref20@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_FIRST","with":null},{"id":"@@@workflow_task_id_ref6@@@","action":{"id":"@@@action_ref2@@@"},"humanSecondsSaved":0,"input":{"url":"{{-\n    'https://'\n    ~ CTX.storage_account_name\n    ~ '.'\n    ~ CTX.ms_tables_url\n    ~ '/'\n    ~ CTX.path\n    ~ CTX.parameters|d('')\n    ~ CTX.filters|d('')\n    ~ CTX.top|d('')\n-}}","body":"{% macro process_for_azure_tables(data) %}\n    {% set processed_data = {} %}\n    {% for key, value in data.items() %}\n        {% if value is iterable and not value is string %}\n            {% set stringified_value = value | tojson %}\n            {% do processed_data.update({key: stringified_value}) %}\n        {% elif value is mapping %}\n            {% set stringified_value = value | tojson %}\n            {% do processed_data.update({key: stringified_value}) %}\n        {% else %}\n            {% do processed_data.update({key: value}) %}\n        {% endif %}\n    {% endfor %}\n    {{- processed_data -}}\n{% endmacro %}\n\n{%- if CTX.body|d -%}\n    {{- process_for_azure_tables(CTX.body|d | from_json_string) | to_json_string -}}\n{%- endif -%}\n\n{#- {{ CTX.body|d(none) }} -#}","json":null,"files":[],"method":"{{ CTX.method }}","params":null,"cookies":null,"headers":{"Accept":"application/json;odata=nometadata","x-ms-date":"{{ now(dt_format='datetime') | format_datetime(output_format='%a, %d %b %Y %H:%M:%S GMT') }}","Content-Type":"application/json","x-ms-version":"2023-11-03","Authorization":"{%- set account_name = CTX.storage_account_name -%}\n{%- set access_key = ORG.VARIABLES[\"storage_account_\" ~ account_name ~ \"_access_key\"] |d -%}\n{%- if not access_key -%}\n    {{- \"ERROR: Unable to retrieve org variable for access key to storage account \" ~ account_name -}}\n{%- else -%}\n    {%- set date = now(dt_format='datetime') | format_datetime(output_format='%a, %d %b %Y %H:%M:%S GMT') -%}\n    {%- set canonicalized_resource = \"/\" ~ account_name ~ \"/\" ~ CTX.path ~ CTX.parameters|d -%}\n    {%- set string_to_sign = date ~ \"\\n\" ~ canonicalized_resource -%}\n    {%- set decoded_key = access_key | decode_base64(as_bytes=True)  -%}\n    {%- set signature = string_to_sign | hmac('sha256', decoded_key) | base64 -%}\n\n    {{- \"SharedKeyLite \" ~ account_name ~ \":\" ~ signature -}}\n{%- endif -%}"},"timeout":150,"auth_password":null,"auth_username":null,"allow_redirects":true,"require_2xx_status":true},"isMocked":false,"join":1,"mockInput":{"mock_result":{}},"name":"tables_request","next":[{"do":["@@@workflow_task_id_ref2@@@"],"from":null,"id":"@@@transition_id_ref21@@@","publish":[{"key":"try_count","value":"{{ CTX.try_count|d(0) + 1 }}"},{"key":"errors","value":"{%- if RESULT.result.errors|d -%}\n    {%- do CTX.errors.append(RESULT.result.errors|d) -%}\n    {{- CTX.errors|d -}}\n{%- else -%}\n    {{- CTX.errors|d -}}\n{%- endif -%}"}],"to":null,"when":"{{ FAILED }}"},{"do":["@@@workflow_task_id_ref9@@@"],"from":null,"id":"@@@transition_id_ref22@@@","publish":[{"key":"try_count","value":"{{ 0 }}"},{"key":"output","value":"{{ RESULT.result.data.value|d or RESULT.result.data|d }}"},{"key":"next_partition_key","value":"{{ RESULT.result.headers['x-ms-continuation-NextPartitionKey'] }}"},{"key":"next_row_key","value":"{{ RESULT.result.headers['x-ms-continuation-NextRowKey'] }}"},{"key":"total_row_count","value":"{{ RESULT.result.data.value|d|length }}"},{"key":"remaining_rows","value":"{%- if CTX.limit|d and (CTX.limit - CTX.total_row_count < 1000) -%}\n    {{- CTX.limit - CTX.total_row_count -}}\n{%- else -%}\n    {{- None -}}\n{%- endif -%}"},{"key":"top","value":"{%- if CTX.remaining_rows|d and CTX.remaining_rows|d(0)|int > 0 -%}\n    {{- '&$top='~CTX.remaining_rows|int -}}\n{%- else -%}\n    {{- \"\" -}}\n{%- endif -%}"}],"to":null,"when":"{%- set output = RESULT.result.data.value|d -%}\n{%- if CTX.top|d -%}\n    {{- False -}}\n{%- elif CTX.limit|d -%}\n    {%- if (CTX.limit|d > output|length ) -%}\n        {{- RESULT.result.headers['x-ms-continuation-NextRowKey'] |d  -}}\n    {%- else -%}\n        {{- False -}}\n    {%- endif -%}\n{%- else -%}\n    {{- RESULT.result.headers['x-ms-continuation-NextRowKey'] |d  -}}\n{%- endif -%}"},{"do":[],"from":null,"id":"@@@transition_id_ref23@@@","publish":[{"key":"output","value":"{{ RESULT.result.data.value|d or RESULT.result.data|d }}"}],"to":null,"when":""}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":300,"transitionMode":"FOLLOW_FIRST","with":null},{"id":"@@@workflow_task_id_ref7@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":1,"mockInput":{"mock_result":{}},"name":"loop to get more Entities","next":[{"do":["@@@workflow_task_id_ref9@@@"],"from":null,"id":"@@@transition_id_ref24@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref8@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"handle_failures","next":[{"do":["@@@workflow_task_id_ref4@@@"],"from":null,"id":"@@@transition_id_ref25@@@","publish":[],"to":null,"when":"{{ CTX.try_count < CTX.max_tries }}"},{"do":[],"from":null,"id":"@@@transition_id_ref26@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_FIRST","with":null},{"id":"@@@workflow_task_id_ref9@@@","action":{"id":"@@@action_ref2@@@"},"humanSecondsSaved":0,"input":{"url":"{{-\n    'https://'\n    ~ CTX.storage_account_name\n    ~ '.'\n    ~ CTX.ms_tables_url\n    ~ '/'\n    ~ CTX.path\n    ~ CTX.parameters|d('')\n    ~ CTX.filters|d('')\n    ~ CTX.top|d('')\n-}}","body":"{{ CTX.body|d(none) }}","json":null,"files":[],"method":"{{ CTX.method }}","params":{"NextRowKey":"{{ CTX.next_row_key }}","NextPartitionKey":"{{ CTX.next_partition_key }}"},"cookies":null,"headers":{"Accept":"application/json;odata=nometadata","x-ms-date":"{{ now(dt_format='datetime') | format_datetime(output_format='%a, %d %b %Y %H:%M:%S GMT') }}","Content-Type":"application/json","x-ms-version":"2023-11-03","Authorization":"{%- set account_name = CTX.storage_account_name -%}\n{%- set access_key = ORG.VARIABLES[\"storage_account_\" ~ account_name ~ \"_access_key\"] |d -%}\n{%- if not access_key -%}\n    {{- \"ERROR: Unable to retrieve org variable for access key to storage account \" ~ account_name -}}\n{%- else -%}\n    {%- set date = now(dt_format='datetime') | format_datetime(output_format='%a, %d %b %Y %H:%M:%S GMT') -%}\n    {%- set canonicalized_resource = \"/\" ~ account_name ~ \"/\" ~ CTX.path ~ CTX.parameters -%}\n    {%- set string_to_sign = date ~ \"\\n\" ~ canonicalized_resource -%}\n    {%- set decoded_key = access_key | decode_base64(as_bytes=True)  -%}\n    {%- set signature = string_to_sign | hmac('sha256', decoded_key) | base64 -%}\n\n    {{- \"SharedKeyLite \" ~ account_name ~ \":\" ~ signature -}}\n{%- endif -%}"},"timeout":150,"auth_password":null,"auth_username":null,"allow_redirects":true,"require_2xx_status":true},"isMocked":false,"join":1,"mockInput":{"mock_result":{}},"name":"get_additional_entities_in_query","next":[{"do":["@@@workflow_task_id_ref3@@@"],"from":null,"id":"@@@transition_id_ref27@@@","publish":[{"key":"try_count","value":"{{ CTX.try_count|d(0) + 1 }}"},{"key":"errors","value":"{%- if RESULT.result.errors|d -%}\n    {%- do CTX.errors.append(RESULT.result.errors|d) -%}\n    {{- CTX.errors|d -}}\n{%- else -%}\n    {{- CTX.errors|d -}}\n{%- endif -%}"}],"to":null,"when":"{{ FAILED }}"},{"do":["@@@workflow_task_id_ref7@@@"],"from":null,"id":"@@@transition_id_ref28@@@","publish":[{"key":"try_count","value":"{{ 0 }}"},{"key":"output","value":"{{ CTX.output + RESULT.result.data.value|d or RESULT.result.data|d }}"},{"key":"next_partition_key","value":"{{ RESULT.result.headers['x-ms-continuation-NextPartitionKey'] }}"},{"key":"next_row_key","value":"{{ RESULT.result.headers['x-ms-continuation-NextRowKey'] }}"},{"key":"total_row_count","value":"{{ CTX.output|length }}"},{"key":"remaining_rows","value":"{%- if CTX.limit|d and (CTX.limit - CTX.total_row_count < 1000) -%}\n    {{- CTX.limit - CTX.total_row_count -}}\n{%- else -%}\n    {{- None -}}\n{%- endif -%}"},{"key":"top","value":"{%- if CTX.remaining_rows|d and CTX.remaining_rows|d(0)|int > 0 -%}\n    {{- '&$top='~CTX.remaining_rows|int -}}\n{%- else -%}\n    {{- \"\" -}}\n{%- endif -%}"}],"to":null,"when":"{%- set output =  CTX.output + RESULT.result.data.value|d -%}\n{%- if CTX.top|d -%}\n    {{- False -}}\n{%- elif CTX.limit|d -%}\n    {%- if (CTX.limit|d > output|length ) -%}\n        {{- RESULT.result.headers['x-ms-continuation-NextRowKey'] |d  -}}\n    {%- else -%}\n        {{- False -}}\n    {%- endif -%}\n{%- else -%}\n    {{- RESULT.result.headers['x-ms-continuation-NextRowKey'] |d  -}}\n{%- endif -%}"},{"do":[],"from":null,"id":"@@@transition_id_ref29@@@","publish":[{"key":"output","value":"{{ CTX.output + RESULT.result.data.value|d or RESULT.result.data|d }}"}],"to":null,"when":""}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_FIRST","with":null},{"id":"@@@workflow_task_id_ref10@@@","action":{"workflow_id":"@@@workflow_ref1@@@"},"humanSecondsSaved":0,"input":{"row_key":null,"contents":null,"operation":"list_tables","table_name":"{{ CTX.table_name }}","partition_key":null,"selected_fields":"{{ [  ] }}","query_expression":null,"storage_account_name":"{{ CTX.storage_account_name }}"},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"list_tables","next":[{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref30@@@","publish":[],"to":null,"when":"{{ {\"TableName\": CTX.table_name} in TASKS.list_tables.result.output }}"},{"do":["@@@workflow_task_id_ref11@@@"],"from":null,"id":"@@@transition_id_ref31@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_FIRST","with":null},{"id":"@@@workflow_task_id_ref11@@@","action":{"workflow_id":"@@@workflow_ref1@@@"},"humanSecondsSaved":0,"input":{"row_key":null,"contents":null,"operation":"create_table","table_name":"{{ CTX.table_name }}","partition_key":null,"selected_fields":"{{ [  ] }}","query_expression":null,"storage_account_name":"{{ CTX.storage_account_name }}"},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"create_table","next":[{"do":["@@@workflow_task_id_ref6@@@"],"from":null,"id":"@@@transition_id_ref32@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_FIRST","with":null}],"timeout":600,"type":"OPTION_GENERATOR","varsSchema":{"errors":{"type":"array","default":"{{ [] }}","required":false,"multiline":false},"output":{"type":"string","required":false,"multiline":false},"max_tries":{"type":"integer","default":"{{ 2 }}","required":false,"multiline":false},"ms_tables_url":{"type":"string","default":"table.core.windows.net","required":false,"multiline":false}}},"nonfunctional_fields":{"description":"","name":"Azure Tables Operations","notes[0].content":"\n## What's Occurring: Task overview\n\nInteracts with tables in Microsoft Azure Storage Services. The tasks include querying entities in a table, inserting new entities, updating existing entities, merging entities, upserting (inserting or updating) entities, deleting entities, and managing (creating, listing, and deleting) tables.\n\n**Entities**: Azure Tables organizes data into entities, which are set of properties, akin to rows in a relational database. Each entity is uniquely identified by a PartitionKey that categorizes the entity within a specific subset for efficient querying, and a RowKey that provides a unique identifier for the entity within its partition. As an example for managing client assets, each computer would be an entity, categorized by a client ID as its PartitionKey and unique RowKey, such as a computer ID.\n\nWhen using `insert`, `update`, `merge`, or any of the `upsert` operations, provide the content for the rows using the `contents` variable. `contents` should be passed into the workflow as ___stringified___ JSON. (Use the `to_json_string` filter.)\n\n`PartitionKey` and `RowKey` can be provided by the explicit variables, or within the data when content is used.\n\n## Operation Types:\n\n**Entity Operations**\n\n### Query\n  * The Query Entities operation queries entities in a table and includes the $filter and $select options.\n  * With this operation you can supply PartitionKey, RowKey, both, or a structured oData query filter via `query_expression`. Refer to the MS docs on formatting this. The workflow will automatically  convert the query to URL encoding.\n  * If you provide no PartitionKey, RowKey, or query_expression, then all entities (up to 1000 at a time) will be returned.\n  * The Query Entities operation supports the query options that the [OData](https://www.odata.org/) protocol specification defines.\n  * Reference: https://learn.microsoft.com/en-us/rest/api/storageservices/query-entities\n\n### Insert\n  * The Insert Entity operation inserts a **new** entity into a table.\n  * This must be a NEW unique pairing of `RowKey` and `PartitionKey` to succeed.\n  * Reference: https://learn.microsoft.com/en-us/rest/api/storageservices/insert-entity\n\n### Update\n  * The Update Entity operation updates an **existing** entity in a table. The Update Entity operation replaces the entire entity, and you can use the operation to remove properties.\n  * This will only work if the pairing of `RowKey` and `PartitionKey` already exist in the database.\n  * Reference: https://learn.microsoft.com/en-us/rest/api/storageservices/update-entity2\n\n### Merge\n  * The Merge Entity operation updates an **existing** entity by updating the entity's properties. This operation does not replace the existing entity, as the Update Entity operation does.\n  * This will merge the given `contents` into the entity, updating or adding attributes as they are given. Existing attributes that are not overwritten will be preserved.\n  * Reference: https://learn.microsoft.com/en-us/rest/api/storageservices/merge-entity\n\n### Upsert Replace\n  * The Insert Or Replace Entity operation **replaces an existing entity, or inserts a new entity** if it doesn't exist in the table. Because this operation can insert or update an entity, it's also known as an upsert operation.\n  * This will **overwrite** (aka _update_) an existing entity if it exists, or create a new one if it doesn't.\n  * Reference: https://learn.microsoft.com/en-us/rest/api/storageservices/insert-or-replace-entity\n\n### Upsert Merge\n  * The Insert Or Merge Entity operation updates an existing entity, or inserts a new entity if it doesn't exist in the table. Because this operation can insert or update an entity, it's also known as an upsert operation.\n  * This will **merge** an existing entity if it exists, or create a new one if it doesn't.\n  * Reference: https://learn.microsoft.com/en-us/rest/api/storageservices/insert-or-merge-entity\n\n\n### Delete\n  * The Delete Entity operation deletes an existing entity in a table.\n  * Reference: https://learn.microsoft.com/en-us/rest/api/storageservices/delete-entity1\n\n\n**Table Operations**\n\n### List Tables\n  * The Query Tables operation returns a list of tables under the specified account.\n  * Reference: https://learn.microsoft.com/en-us/rest/api/storageservices/query-tables\n\n### Create Table\n  * The Create Table operation creates a new table in a storage account.\n  * Reference: https://learn.microsoft.com/en-us/rest/api/storageservices/create-table\n\n### Delete Table\n  * The Delete Table operation deletes the specified table and any data it contains.\n  * Reference: https://learn.microsoft.com/en-us/rest/api/storageservices/delete-table\n\n\n## Special Considerations: Any crucial factors\n\n- The 'storage_account_name' must be set up for looking up the access key, otherwise errors will occur.\n- For tasks involving specific entities (insert, update, merge, upsert, delete), you need to provide the 'PartitionKey' and 'RowKey' either in the contents JSON or as inputs.\n- The 'operation' input determines which task to execute. Possible values include 'query', 'insert', 'update', 'merge', 'upsert_replace', 'upsert_merge', 'delete', 'list_tables', 'create_table', and 'delete_table'.\n- For the 'query' task, you can provide a 'query_expression' or specify 'partition_key' and/or 'row_key'. You can also choose specific fields to return using 'selected_fields'. The task uses these inputs to construct the query parameters.\n- For the 'insert', 'update', 'merge', 'upsert_replace', and 'upsert_merge' tasks, you need to provide the entity data in the 'contents' input. The data should be a JSON string representing the entity.\n- For the 'create_table' task, you need to provide the table name in the 'table_name' input.\n","notes[0].metadata":{"x":-998.0301016202793,"y":-513.4820951153306,"fill":"rgba(66, 158, 255, 0.25)","width":2222,"height":211,"stroke":"rgba(66, 158, 255, 0.7)","fillEnabled":true},"notes[0].title":"Table Operations in Microsoft Azure Storage Services","parameters.contents.description":"stringified 'query', 'insert', or 'upsert' content. RowKey and PartitionKey must be either included here or as input fields","parameters.contents.label":"","parameters.limit.description":"","parameters.limit.label":"","parameters.operation.description":"`query`, `insert`, `update`, `merge`, `delete`, `upsert_replace`, `upsert_merge`, `list_tables`, `create_table`, `delete_table`. Read more in the documentation for this workflow","parameters.operation.label":"","parameters.partition_key.description":"Record PartitionKey. Required for `delete`, `merge`, `update`, and `merge`s. May be included here or in the contents for `insert`s.","parameters.partition_key.label":"PartitionKey","parameters.query_expression.description":"Build your own Data query rather than using other fields. Learn more at https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities","parameters.query_expression.label":"","parameters.row_key.description":"Record RowKey. Required for `delete`, `merge`, `update`, and `merge`s. May be included here or in the contents for `insert`s.","parameters.row_key.label":"RowKey","parameters.selected_fields.description":"IF `query`ing tables, which fields should be returned? Leave blank to return all","parameters.selected_fields.label":"","parameters.storage_account_name.description":"Name of the Storage Account","parameters.storage_account_name.label":"","parameters.table_name.description":"Name of the Table to Act On","parameters.table_name.label":"","parameters.top.description":"Provide a int value for the top param to limit the results returned (max 1000, does not support pagination)","parameters.top.label":"Top","tasks[0].description":"Action that does nothing","tasks[0].metadata":{"x":-36.47770000000048,"y":-888.2009500000005,"clonedFromId":"0f807b7b5f81425abb456ee573b9f77e"},"tasks[0].next[0].label":"","tasks[1].description":"Action that does nothing","tasks[1].metadata":{"x":-599.9999999999999,"y":263.99999999999955,"clonedFromId":"debe40c2f1164cf2823e16807f8859c4"},"tasks[1].next[0].label":"Check Table Exists","tasks[1].next[1].label":"Retry","tasks[1].next[2].label":"Give Up","tasks[2].description":"Action that does nothing","tasks[2].metadata":{"x":-599.9999999999999,"y":576.0000000000002,"clonedFromId":"0ed85c946553425a90e616fff1ec31d6"},"tasks[2].next[0].label":"Retry","tasks[2].next[1].label":"Give Up","tasks[3].description":"Perform an HTTP request","tasks[3].metadata":{"x":384,"y":72,"clonedFromId":"d35ec90c872f4e0a85f1b2b367e82c27"},"tasks[3].next[0].label":"","tasks[3].next[1].label":"","tasks[4].description":"https://learn.microsoft.com/en-us/rest/api/storageservices/table-service-rest-api","tasks[4].metadata":{"x":-912,"y":-456,"clonedFromId":"018c7d9bac0774a3822ad7d3ba066ade"},"tasks[4].next[0].label":"Secret Org Var Not Set","tasks[4].next[1].label":"Query","tasks[4].next[2].label":"Insert","tasks[4].next[3].label":"Update","tasks[4].next[4].label":"Merge","tasks[4].next[5].label":"Upsert Replace","tasks[4].next[6].label":"Upsert Merge","tasks[4].next[7].label":"Delete","tasks[4].next[8].label":"List Tables","tasks[4].next[9].label":"Create Table","tasks[4].next[10].label":"Delete Table","tasks[4].next[11].label":"","tasks[5].description":"Perform an HTTP request","tasks[5].metadata":{"x":-216,"y":71.99999999999977,"clonedFromId":"86d00b031ec14e7a945fa36a46b5e98d"},"tasks[5].next[0].label":"","tasks[5].next[1].label":"More Entities to Get","tasks[5].next[2].label":"Always","tasks[6].description":"Action that does nothing","tasks[6].metadata":{"x":-95.99999999999989,"y":576.0000000000002,"clonedFromId":"49e8b683f86843d98f14b980cf91eee3"},"tasks[6].next[0].label":"","tasks[7].description":"Action that does nothing","tasks[7].metadata":{"x":384,"y":312,"clonedFromId":"7173decc33fe4f39a9ba2b2e8c6aff78"},"tasks[7].next[0].label":"Retry","tasks[7].next[1].label":"Give Up","tasks[8].description":"Perform an HTTP request","tasks[8].metadata":{"x":-215.9999999999999,"y":407.9999999999999,"clonedFromId":"3bf032cd40b443bb9603c4d914a2a8ee"},"tasks[8].next[0].label":"","tasks[8].next[1].label":"More Entities to Get","tasks[8].next[2].label":"Always","tasks[9].description":"","tasks[9].metadata":{"x":-1008,"y":480,"clonedFromId":"aa2fc306be5d45e68f58bd19d56ed151"},"tasks[9].next[0].label":"Exists","tasks[9].next[1].label":"Does Not Exist","tasks[10].description":"","tasks[10].metadata":{"x":-1008,"y":648,"clonedFromId":"be864434b3d248f18d51e9b087252d05"},"tasks[10].next[0].label":"Exists","varsSchema.errors.description":"","varsSchema.errors.label":"","varsSchema.max_tries.description":"How many times to retry the action before giving up in error","varsSchema.max_tries.label":"","varsSchema.ms_tables_url.description":"table.core.windows.net","varsSchema.ms_tables_url.label":"","varsSchema.output.description":"","varsSchema.output.label":""},"references":{"workflow_task_id_ref11":{"kind":"string","type":"workflow_task_id","src_key_hash":"55UzbJNRJLyveUMHCemgARKpAt5w4mPJfzoqVwW9K6fy","content_hash":"HdweE1pGiaEuZ65Zys7jRUMJXxug6iSiZsy79cEBBicf","locations":["tasks[10].id","tasks[9].next[1].do[0]"]},"workflow_task_id_ref9":{"kind":"string","type":"workflow_task_id","src_key_hash":"D8LLCM536iaxjJh8jFdefUzyEfANUfVyR6wyLz5NSbrf","content_hash":"FaL3hCzg28wFWDJe2xL9kTeyvADoFCPFRRpBzEWBEWd9","locations":["tasks[8].id","tasks[2].next[0].do[0]","tasks[5].next[1].do[0]","tasks[6].next[0].do[0]"]},"workflow_task_id_ref3":{"kind":"string","type":"workflow_task_id","src_key_hash":"94f5pPwzwH9dNwVEXrsp8qwozKvyfCx5gNAwQbjj4w7f","content_hash":"DWhJqLr5oWQSoZoFUJZzEE9muXCzBbgonyTx79mga2fh","locations":["tasks[2].id","tasks[8].next[0].do[0]"]},"transition_id_ref2":{"kind":"string","type":"transition_id","src_key_hash":"ktAa8ei4Wfj4HLUrRZCYx9S6SHAGq92YTSsVEHkNkKy","content_hash":"C5BySvfeXjVfuyGEEWSjQ6uoXmD1pPio9aui96PLesu6","locations":["tasks[1].next[0].id"]},"workflow_task_id_ref10":{"kind":"string","type":"workflow_task_id","src_key_hash":"2UrHsBZV5Zr4hEA6GvSZ21nPjjbEFdueCUeKERBh5daS","content_hash":"3D5c7WbGNwqUKEvxbbPWbqo6pSdUGDwtSs2zZLFFCihD","locations":["tasks[9].id","tasks[1].next[0].do[0]"]},"transition_id_ref7":{"kind":"string","type":"transition_id","src_key_hash":"pY1h7xgWgX1X3nABRr27S7aH7jhwsnfdHHL9GVc96sd","content_hash":"31aym5Heq6BNHgXVZ19k9n1nFuCiyUVSDUmSK1s9wBgg","locations":["tasks[3].next[0].id"]},"transition_id_ref4":{"kind":"string","type":"transition_id","src_key_hash":"8bHw943kvAtJAr19enNumpgLu5H8GzzrMMdxi5w5ucDT","content_hash":"EqBwfXhYdi1VQ1RpmwkxYhM7dLGkHQWe8sbDuYwhu4fn","locations":["tasks[1].next[2].id"]},"transition_id_ref29":{"kind":"string","type":"transition_id","src_key_hash":"BAiiJ6N4kDa1dvQ6XHaQLzY5X9Zp8LDXNF8jFRq5sx98","content_hash":"95yZbJLVcnfaLEPgggFpDoUfZnEBMAUb7xRQwyW3U6C6","locations":["tasks[8].next[2].id"]},"transition_id_ref26":{"kind":"string","type":"transition_id","src_key_hash":"DQugZd8htPjo27EWfYgdxK6Y2GSVHjs4LiaPD4SxHMZ3","content_hash":"CSkgmQuiAWUWWaE7KmmAGptcJQDN8UWKGU1W1MxK3QXt","locations":["tasks[7].next[1].id"]},"transition_id_ref28":{"kind":"string","type":"transition_id","src_key_hash":"Bc8aSz7WU1tWBMbqfAX22GHAfRkhU6P1Cz5Ro5kdexy2","content_hash":"FPQhDxHDa8ziZ34M364dhm8dz7xjozGPtat3Htk5iBvg","locations":["tasks[8].next[1].id"]},"transition_id_ref32":{"kind":"string","type":"transition_id","src_key_hash":"EPPkeZZVb5DLTMuUTn3KHHKL3f3knHK95BWZUKG7pL9J","content_hash":"9gbw4hCi359RHMg8tjZJnb96gBiyqXe6w3aYsmf7yhgL","locations":["tasks[10].next[0].id"]},"transition_id_ref24":{"kind":"string","type":"transition_id","src_key_hash":"CsQvijhjxHczMStpTo9fZAaKXA9wWCAxfkS82fS4aGd","content_hash":"2Yue7cZ1yooH9afNYgUra7WxEUNFiQkiQkVJXkiQ2g8u","locations":["tasks[6].next[0].id"]},"transition_id_ref25":{"kind":"string","type":"transition_id","src_key_hash":"BMumkNKwg7oBvBnrrXgo4ygMK6M4ujn7DWpbKwT7TwRh","content_hash":"36EvKZfajxpzfCapAj7AAHTFAfxwA4mhXyKgtuYTN1dD","locations":["tasks[7].next[0].id"]},"workflow_task_id_ref1":{"kind":"string","type":"workflow_task_id","src_key_hash":"6FHN1s8ZfznjddZ7Td8xQDET3a8pB3ZxgBKLkVXsbKTw","content_hash":"DFG9xsQRRAywK4SkQ2xY7kTQaafF2Xbj96Jcts4c8Rg7","locations":["tasks[0].id"]},"workflow_note_id_ref1":{"kind":"string","type":"workflow_note_id","src_key_hash":"DnkbdYn8pn8zLtQtNmUXcx6Adx2dn32JkDTK9zcNY6LW","content_hash":"7kfbEDtRiCCvwxPUoKnnLNK6U7v2bZGWUbak9Dmem2nN","locations":["notes[0].id"]},"workflow_task_id_ref8":{"kind":"string","type":"workflow_task_id","src_key_hash":"2dwUZEUdPhEqhD4KUunny2L5EYjGK2UdNmQQHtjKfjis","content_hash":"2DX22urwtyetGpqdBuyXNVG7YsonsTdwrxSuLFTDpfmo","locations":["tasks[7].id","tasks[3].next[0].do[0]"]},"workflow_task_id_ref2":{"kind":"string","type":"workflow_task_id","src_key_hash":"5mf8KZ7fiVf9TBpxVjw88w9XPWJueJcMZsGvhSe5Smp1","content_hash":"783wDUfxugaC4oGT3T7DWv3gqpJaQgUF8YvTuyggmzA2","locations":["tasks[1].id","tasks[5].next[0].do[0]"]},"transition_id_ref8":{"kind":"string","type":"transition_id","src_key_hash":"B5fsx4pqrdovkTN28n6LNnfDDEAJmgP4jUsxo2DexGAY","content_hash":"4JmaE7mvuiDWNspr4Xgbt5ba2zTPodDZgXvekjBYcTQb","locations":["tasks[3].next[1].id"]},"action_ref1":{"kind":"string","type":"action","src_key_hash":"EP5vDxnDjrYnpHo1dbtz8YCrvEq3jKHngkLwkfJqAx58","content_hash":"CdPL6KHuhM7mBvTHi4QnQbxCitnoxuRrq1BfHNnQYzKB","locations":["tasks[0].action.id","tasks[1].action.id","tasks[2].action.id","tasks[4].action.id","tasks[6].action.id","tasks[7].action.id"]},"transition_id_ref1":{"kind":"string","type":"transition_id","src_key_hash":"8w3FiCcFFTFXbJiYCUyRGxDAehBTDFo7B4K13NfP9sxj","content_hash":"AbqJEmu2sA3WSFeQCs5jcPbAowhP5YCjcgRRdhz1yC2T","locations":["tasks[0].next[0].id"]},"transition_id_ref16":{"kind":"string","type":"transition_id","src_key_hash":"DjnY6fXQn1bhCWTueTqhq4FXojtmK4jZ47YGL7jKrdtA","content_hash":"8bSzgfajDHvVQXAQAmMJYHtp7BSLy3SFCErbhB42ZPwX","locations":["tasks[4].next[7].id"]},"transition_id_ref15":{"kind":"string","type":"transition_id","src_key_hash":"EvKirKc53viWoMud5hkJUoGUW66Lh9A7X1hXWiEkvZpv","content_hash":"GPoxKR4WHcRHofKdfGgfVQNYqRyiTt1HTSL5UP4L7y61","locations":["tasks[4].next[6].id"]},"transition_id_ref13":{"kind":"string","type":"transition_id","src_key_hash":"FTmT7omspryGt4PD1CHNZDyufHR2UzkEev4Q8QNPpYEH","content_hash":"AqLThCrSTTNdvfdZPMsj37b85DMjCZSfKpGSGCSyMTBQ","locations":["tasks[4].next[4].id"]},"workflow_ref1":{"kind":"string","type":"workflow","src_key_hash":"3h1xX2UPtepv6WfQuw1cuUDLmY21cvvbnqDvJ7ts1LR3","content_hash":"Gu1dKYcdwjxL3mbDSHE4KTuTDbDDTNi1vpFu218PgTcG","locations":["tasks[9].action.workflow_id","tasks[10].action.workflow_id"]},"transition_id_ref6":{"kind":"string","type":"transition_id","src_key_hash":"8W4Z95sEki6v9hrsrMB5AvFGzGcXkaWUCzipD9F17QPy","content_hash":"A6PKjd4Bf77Mfh2KvTqs2NMQsNy51tfhcpgM2eX75rcE","locations":["tasks[2].next[1].id"]},"transition_id_ref19":{"kind":"string","type":"transition_id","src_key_hash":"Hxmt7Lo5gVMpfsQtZfP3Hnvkas3K2vxSwjdpUgvSSmi6","content_hash":"BQjuchTcSd3GzuqDFjUqvaiFt6bAXopcwTmrd7wypZvt","locations":["tasks[4].next[10].id"]},"transition_id_ref20":{"kind":"string","type":"transition_id","src_key_hash":"54qAxozXBzTFQTsdAz5qDzs85iKr59y6enVng58WGKV4","content_hash":"CsGnTcAgfbRsXBrntaMFEdDfNJQmpMeaoYa2WY2S75Ez","locations":["tasks[4].next[11].id"]},"transition_id_ref9":{"kind":"string","type":"transition_id","src_key_hash":"5j12nf7sAAfRiiGvPTyPz68V2Nr6RJXuya9RdZNzT3yF","content_hash":"4bXbneZVzU6PQuVxRq5wZdGMGLQbU4d1KLMAARZLNFrR","locations":["tasks[4].next[0].id"]},"transition_id_ref3":{"kind":"string","type":"transition_id","src_key_hash":"ELPpCFyiQ49AoG7e9hnJbzLGBf65K5HhpYd82b5MTBuw","content_hash":"EDRyLW2wmgpWPSCeHBFrSZafL8rGhJ2mcrTGmZMDLkMM","locations":["tasks[1].next[1].id"]},"transition_id_ref10":{"kind":"string","type":"transition_id","src_key_hash":"AntQjrWTCURSBB8mTAJKHFw5WzcKoJvvfniLKMF86z7h","content_hash":"HZUFBvBrS2AgX2nnBv3fgSgAVtFxozcZnnvDnfbten8y","locations":["tasks[4].next[1].id"]},"transition_id_ref23":{"kind":"string","type":"transition_id","src_key_hash":"EvpQo7zVnyyANErpsDZTXSYkjVXibZdRoYvUAocMCsCR","content_hash":"3DE8A9RaTRtctMbe8HAgALyDxDv9SPVLZ2ManSw3LQMo","locations":["tasks[5].next[2].id"]},"transition_id_ref12":{"kind":"string","type":"transition_id","src_key_hash":"UxWYxCn9GXEgLVS6n2WN7jcxUvUrNUu1Eb8R5t9wqc1","content_hash":"6SVkhDrwCZ3U8h93HkD4umiNriXbcdZJXD5DzM6eu6gj","locations":["tasks[4].next[3].id"]},"workflow_task_id_ref6":{"kind":"string","type":"workflow_task_id","src_key_hash":"8So6t5sMH2XECUQrpKWAdkbNoyn4nu7Kjh5pkTNpYRme","content_hash":"3gq2PgTY8vacMCe2AdH4eFLpLQ5y2dwutuaMnKgF9TGE","locations":["tasks[5].id","tasks[1].next[1].do[0]","tasks[4].next[1].do[0]","tasks[4].next[2].do[0]","tasks[4].next[3].do[0]","tasks[4].next[4].do[0]","tasks[4].next[5].do[0]","tasks[4].next[6].do[0]","tasks[4].next[8].do[0]","tasks[4].next[9].do[0]","tasks[4].next[10].do[0]","tasks[9].next[0].do[0]","tasks[10].next[0].do[0]"]},"transition_id_ref30":{"kind":"string","type":"transition_id","src_key_hash":"BHLAbwH5d3dfn5QvytdMtJ76i8vsFLTsxyQ4e6S2UP6y","content_hash":"FtzbzHYekxpmsEJzE9f9mu8izYpSRpjqBmWWwh5Q6PkZ","locations":["tasks[9].next[0].id"]},"transition_id_ref14":{"kind":"string","type":"transition_id","src_key_hash":"6181CBVdYdcHsiAq4HgxieZa6BqTKvSCGongZoMvDz66","content_hash":"5ygGDH2X6Eqg4VuoqFPvTjfNLFmpXeXVEXeFbQ81hEXn","locations":["tasks[4].next[5].id"]},"action_ref2":{"kind":"string","type":"action","src_key_hash":"H9DP4myozFv4QzBuShCPyJLgDNEpUtuk1cNSasSMSPb1","content_hash":"FMu3hsNV7SdbaFHCpQXe4YsxtfRZHq3LfQ8Ej6uv322w","locations":["tasks[3].action.id","tasks[5].action.id","tasks[8].action.id"]},"transition_id_ref27":{"kind":"string","type":"transition_id","src_key_hash":"4FLbqL6UrEtoJWkR9be6fQamgauLkHHRdWcwvqRkzKWM","content_hash":"2vBK2cLcZtarFBjvsX8uJv9AHfzCPwuJqqaRyqwLNYDx","locations":["tasks[8].next[0].id"]},"workflow_task_id_ref4":{"kind":"string","type":"workflow_task_id","src_key_hash":"9BH92L4iLYMCJt2V1zXmv67pWFeJvUcZiEHTyrRWt2NT","content_hash":"E7Fs4CkKbgimVHLMqSSasBHWXMtMSknfSemBi2gURpYF","locations":["tasks[3].id","tasks[4].next[7].do[0]","tasks[7].next[0].do[0]"]},"workflow_task_id_ref7":{"kind":"string","type":"workflow_task_id","src_key_hash":"sjjL1PU5aaAz3BE6i1e5RQhMJrkLACv5GP6ZsLSH6Zt","content_hash":"3sxQ1iRX97i5xxZ2HTsv4ZjucGTDXEFsXtkDRyBYDt7V","locations":["tasks[6].id","tasks[8].next[1].do[0]"]},"transition_id_ref17":{"kind":"string","type":"transition_id","src_key_hash":"4QFCNnV32t6U2KeWyFrsEtKfkRDPyA6NkXFUd5AtAJRF","content_hash":"GFsgcGoGx2kVw7SLMxqpnKjziGGHQxCycaMBkjhqmsjP","locations":["tasks[4].next[8].id"]},"transition_id_ref22":{"kind":"string","type":"transition_id","src_key_hash":"DjANpmZexG4Udm2NTtvkPA6iQSnbgq8imDzjU4NFEaSF","content_hash":"4Zx1mfCsxaQczDHDtBqDwvhVpTRbqAJZoUKagU6jd2mu","locations":["tasks[5].next[1].id"]},"workflow_task_id_ref5":{"kind":"string","type":"workflow_task_id","src_key_hash":"eVKFShyePdXkN6y7SFNTzC7poTDKJoEVhathuXVYn7P","content_hash":"Fo7Wdfwx9UzEzCm54BnKGgR9GYdR8oLXRNHPuGRV9zgz","locations":["tasks[4].id","tasks[0].next[0].do[0]"]},"transition_id_ref21":{"kind":"string","type":"transition_id","src_key_hash":"4zfrApwbsG2jAGNTJN9MgFWUoS8c4NoiKCSTm2apoDmX","content_hash":"FbBtPPWQYwSTp6wN6bRwq78sTY6mBB8CskkxSKgNopUF","locations":["tasks[5].next[0].id"]},"transition_id_ref11":{"kind":"string","type":"transition_id","src_key_hash":"DkVHDo8HvcEqZCbWSj4yebGLJyUXnYMhmxwydnL2HLGi","content_hash":"5NuZGNkCzYJwCNg9TF1bcHa2FFYbddhub19GFxTGys7c","locations":["tasks[4].next[2].id"]},"transition_id_ref5":{"kind":"string","type":"transition_id","src_key_hash":"6Es8qAPvtzRDbWDsYHjJ5niYKt3CKiAZwxQTqBh7W1z4","content_hash":"8RBScwBLKRLnGbpai2mZG1R6ueW9ymKfM9t4RfPPCiti","locations":["tasks[2].next[0].id"]},"transition_id_ref18":{"kind":"string","type":"transition_id","src_key_hash":"7Dkhaez5FgnbJUhvsBUKXJae7LHgMi3XYyU8cpyznTu1","content_hash":"Evh3zAcEzXZ7Gnth4A8CjbzrnDsRPYyn4qDvQ7LHS9UF","locations":["tasks[4].next[9].id"]},"transition_id_ref31":{"kind":"string","type":"transition_id","src_key_hash":"GG6qtzN97jwTa3cj9B8rcjubV3nTcGLyPZu12j3PSbEy","content_hash":"HjNV4A9aGhjgczDRQW8t7WifKDZaa1QQ8RwdrsXDANbo","locations":["tasks[9].next[1].id"]}},"dependencies":["transition_id:EPPkeZZVb5DLTMuUTn3KHHKL3f3knHK95BWZUKG7pL9J","workflow_task_id:sjjL1PU5aaAz3BE6i1e5RQhMJrkLACv5GP6ZsLSH6Zt","workflow_task_id:2dwUZEUdPhEqhD4KUunny2L5EYjGK2UdNmQQHtjKfjis","transition_id:UxWYxCn9GXEgLVS6n2WN7jcxUvUrNUu1Eb8R5t9wqc1","transition_id:DQugZd8htPjo27EWfYgdxK6Y2GSVHjs4LiaPD4SxHMZ3","workflow_task_id:D8LLCM536iaxjJh8jFdefUzyEfANUfVyR6wyLz5NSbrf","transition_id:AntQjrWTCURSBB8mTAJKHFw5WzcKoJvvfniLKMF86z7h","transition_id:ELPpCFyiQ49AoG7e9hnJbzLGBf65K5HhpYd82b5MTBuw","transition_id:6181CBVdYdcHsiAq4HgxieZa6BqTKvSCGongZoMvDz66","transition_id:7Dkhaez5FgnbJUhvsBUKXJae7LHgMi3XYyU8cpyznTu1","transition_id:4FLbqL6UrEtoJWkR9be6fQamgauLkHHRdWcwvqRkzKWM","transition_id:EvKirKc53viWoMud5hkJUoGUW66Lh9A7X1hXWiEkvZpv","transition_id:ktAa8ei4Wfj4HLUrRZCYx9S6SHAGq92YTSsVEHkNkKy","transition_id:8W4Z95sEki6v9hrsrMB5AvFGzGcXkaWUCzipD9F17QPy","workflow_task_id:6FHN1s8ZfznjddZ7Td8xQDET3a8pB3ZxgBKLkVXsbKTw","workflow_task_id:9BH92L4iLYMCJt2V1zXmv67pWFeJvUcZiEHTyrRWt2NT","transition_id:BMumkNKwg7oBvBnrrXgo4ygMK6M4ujn7DWpbKwT7TwRh","action:EP5vDxnDjrYnpHo1dbtz8YCrvEq3jKHngkLwkfJqAx58","workflow_task_id:2UrHsBZV5Zr4hEA6GvSZ21nPjjbEFdueCUeKERBh5daS","transition_id:Hxmt7Lo5gVMpfsQtZfP3Hnvkas3K2vxSwjdpUgvSSmi6","transition_id:CsQvijhjxHczMStpTo9fZAaKXA9wWCAxfkS82fS4aGd","transition_id:EvpQo7zVnyyANErpsDZTXSYkjVXibZdRoYvUAocMCsCR","transition_id:BAiiJ6N4kDa1dvQ6XHaQLzY5X9Zp8LDXNF8jFRq5sx98","transition_id:4zfrApwbsG2jAGNTJN9MgFWUoS8c4NoiKCSTm2apoDmX","transition_id:BHLAbwH5d3dfn5QvytdMtJ76i8vsFLTsxyQ4e6S2UP6y","transition_id:5j12nf7sAAfRiiGvPTyPz68V2Nr6RJXuya9RdZNzT3yF","workflow_task_id:94f5pPwzwH9dNwVEXrsp8qwozKvyfCx5gNAwQbjj4w7f","workflow:3h1xX2UPtepv6WfQuw1cuUDLmY21cvvbnqDvJ7ts1LR3","transition_id:8w3FiCcFFTFXbJiYCUyRGxDAehBTDFo7B4K13NfP9sxj","transition_id:DjnY6fXQn1bhCWTueTqhq4FXojtmK4jZ47YGL7jKrdtA","transition_id:54qAxozXBzTFQTsdAz5qDzs85iKr59y6enVng58WGKV4","workflow_task_id:8So6t5sMH2XECUQrpKWAdkbNoyn4nu7Kjh5pkTNpYRme","transition_id:8bHw943kvAtJAr19enNumpgLu5H8GzzrMMdxi5w5ucDT","transition_id:6Es8qAPvtzRDbWDsYHjJ5niYKt3CKiAZwxQTqBh7W1z4","transition_id:DjANpmZexG4Udm2NTtvkPA6iQSnbgq8imDzjU4NFEaSF","transition_id:B5fsx4pqrdovkTN28n6LNnfDDEAJmgP4jUsxo2DexGAY","transition_id:Bc8aSz7WU1tWBMbqfAX22GHAfRkhU6P1Cz5Ro5kdexy2","transition_id:4QFCNnV32t6U2KeWyFrsEtKfkRDPyA6NkXFUd5AtAJRF","action:H9DP4myozFv4QzBuShCPyJLgDNEpUtuk1cNSasSMSPb1","workflow_note_id:DnkbdYn8pn8zLtQtNmUXcx6Adx2dn32JkDTK9zcNY6LW","transition_id:FTmT7omspryGt4PD1CHNZDyufHR2UzkEev4Q8QNPpYEH","transition_id:GG6qtzN97jwTa3cj9B8rcjubV3nTcGLyPZu12j3PSbEy","transition_id:DkVHDo8HvcEqZCbWSj4yebGLJyUXnYMhmxwydnL2HLGi","transition_id:pY1h7xgWgX1X3nABRr27S7aH7jhwsnfdHHL9GVc96sd","workflow_task_id:5mf8KZ7fiVf9TBpxVjw88w9XPWJueJcMZsGvhSe5Smp1","workflow_task_id:eVKFShyePdXkN6y7SFNTzC7poTDKJoEVhathuXVYn7P","workflow_task_id:55UzbJNRJLyveUMHCemgARKpAt5w4mPJfzoqVwW9K6fy"]},"workflow:m4pQcYxVwCGrNo8oT7ckbnwaY2VJ7MuT8tFZpgsK7vw":{"type":"workflow","content_hash":"6qNKFEwNhwu2UWDuoxKUs6UBW8UA2nQvU4LGd5NtgVsG","hash":"3Hu1EP2g24g1gXAoWc3fr8uykDCCvyeuesS2qLdv6rpR","fields":{"humanSecondsSaved":0,"notes":[],"output":[],"parameters":{},"tasks":[{"id":"@@@workflow_task_id_ref1@@@","action":{"workflow_id":"@@@workflow_ref1@@@"},"humanSecondsSaved":0,"input":{"Device_stringified":"{{ item() | to_json_string }}"},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Get-AlertableMetrics","next":[{"do":["@@@workflow_task_id_ref4@@@"],"from":null,"id":"@@@transition_id_ref1@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"Metrics","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":{"items":"{{ CTX.Devices }}","concurrency":"10"}},{"id":"@@@workflow_task_id_ref2@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"START","next":[{"do":["@@@workflow_task_id_ref3@@@"],"from":null,"id":"@@@transition_id_ref2@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref3@@@","action":{"workflow_id":"@@@workflow_ref2@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"Get-Devices","next":[{"do":["@@@workflow_task_id_ref1@@@"],"from":null,"id":"@@@transition_id_ref3@@@","publish":[{"key":"Devices","value":"{{ CTX.DevicesList.output }}"}],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"DevicesList","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref4@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"END","next":[{"do":[],"from":null,"id":"@@@transition_id_ref4@@@","publish":[],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null}],"timeout":28800,"type":"STANDARD","varsSchema":{}},"nonfunctional_fields":{"description":"","name":"[BEZ-RMM] Alerting Engine","tasks[0].description":"","tasks[0].metadata":{"x":648,"y":360},"tasks[0].next[0].label":"","tasks[1].description":"Action that does nothing","tasks[1].metadata":{"x":648,"y":-24},"tasks[1].next[0].label":"","tasks[2].description":"","tasks[2].metadata":{"x":648,"y":168},"tasks[2].next[0].label":"","tasks[3].description":"Action that does nothing","tasks[3].metadata":{"x":648,"y":552},"tasks[3].next[0].label":""},"references":{"workflow_ref1":{"kind":"string","type":"workflow","src_key_hash":"Df5bfAe5n1im6TcQwEQmiwQEStk7hkijhbU2ETeCVrkG","content_hash":"C4oQUdiudUtzexWk1KMbV9ATMJ3xiGMZ1pdPXbNC7s8b","locations":["tasks[0].action.workflow_id"]},"workflow_task_id_ref4":{"kind":"string","type":"workflow_task_id","src_key_hash":"2wHprfdymd4NN9tLqxyMuuPibJBVe1HqmewUdZ9QEyFC","content_hash":"B19DxqBQrp3Y8Q6v6tRbCUawkT84PXLSEnxzoCMtkT8D","locations":["tasks[3].id","tasks[0].next[0].do[0]"]},"transition_id_ref4":{"kind":"string","type":"transition_id","src_key_hash":"871mbcEPgJoeZR2xFfswuS2TuGF6ojkdapCgLcSQ6vwa","content_hash":"AinPa2PVCBankzPzwJs4Y8YKLq392ykXL4CM1YD3qZ3B","locations":["tasks[3].next[0].id"]},"workflow_task_id_ref2":{"kind":"string","type":"workflow_task_id","src_key_hash":"6LTTLDigNBByUFW51KaRVdw5zjqTkaw7AnM5X5J6JSay","content_hash":"691XpoQsGFoCzNe5RWs8qkacNhzfecTyQTSifceRTgvE","locations":["tasks[1].id"]},"workflow_ref2":{"kind":"string","type":"workflow","src_key_hash":"6E2rapUdMhuaavQjk5vbDCrD5xxGvadP3BXBBSqYNfep","content_hash":"FMvo8zAkuyMoZYcN4qxX8FuUC9ykmN6wvjBoCpGkwQCP","locations":["tasks[2].action.workflow_id"]},"transition_id_ref3":{"kind":"string","type":"transition_id","src_key_hash":"G37RLeKfJ4Nutib3hu83ebDMm1Bh1Hpe7oTwJUCz1wPg","content_hash":"B4hbabP9SpCtFvPthHAkajVvLCva9QfigMb4XcsJyZP6","locations":["tasks[2].next[0].id"]},"transition_id_ref1":{"kind":"string","type":"transition_id","src_key_hash":"3DdHsqFS2UjkaUp2siQETTRiQCBeFqvrnpjsPBTBDRct","content_hash":"8NNyxZQuvaNzNQLF5fCF5UhP67LHyLnoZMoxtnfiDH3T","locations":["tasks[0].next[0].id"]},"action_ref1":{"kind":"string","type":"action","src_key_hash":"EP5vDxnDjrYnpHo1dbtz8YCrvEq3jKHngkLwkfJqAx58","content_hash":"CdPL6KHuhM7mBvTHi4QnQbxCitnoxuRrq1BfHNnQYzKB","locations":["tasks[1].action.id","tasks[3].action.id"]},"workflow_task_id_ref3":{"kind":"string","type":"workflow_task_id","src_key_hash":"2QJ4L4vzbYnqeZzACDUKtQ32fF7q8RPBhAXZBbBWPsfB","content_hash":"Dzbwt5UvprCtmzK66L3uY9PsYQPcTPZaQD8YCFFNN2GF","locations":["tasks[2].id","tasks[1].next[0].do[0]"]},"transition_id_ref2":{"kind":"string","type":"transition_id","src_key_hash":"HsJ88g2TmRvh1nVZJyPDeSbkBDTSEmYKEbfzuZoy1xaQ","content_hash":"h35j49QvuBKxp8AxvQjxTzDSQ8UpZZNWmkfiJZaUsqB","locations":["tasks[1].next[0].id"]},"workflow_task_id_ref1":{"kind":"string","type":"workflow_task_id","src_key_hash":"7knwKKtcR2KDJeKNwn6s6LSUXB45eDYT8HHQiuXRZC96","content_hash":"4w7gTBQaKMa4Pv3BGs7dAbV458v4SqoV8n361XSkFVT9","locations":["tasks[0].id","tasks[2].next[0].do[0]"]}},"dependencies":["transition_id:HsJ88g2TmRvh1nVZJyPDeSbkBDTSEmYKEbfzuZoy1xaQ","workflow_task_id:2wHprfdymd4NN9tLqxyMuuPibJBVe1HqmewUdZ9QEyFC","transition_id:G37RLeKfJ4Nutib3hu83ebDMm1Bh1Hpe7oTwJUCz1wPg","action:EP5vDxnDjrYnpHo1dbtz8YCrvEq3jKHngkLwkfJqAx58","workflow_task_id:6LTTLDigNBByUFW51KaRVdw5zjqTkaw7AnM5X5J6JSay","workflow:6E2rapUdMhuaavQjk5vbDCrD5xxGvadP3BXBBSqYNfep","transition_id:871mbcEPgJoeZR2xFfswuS2TuGF6ojkdapCgLcSQ6vwa","workflow:Df5bfAe5n1im6TcQwEQmiwQEStk7hkijhbU2ETeCVrkG","transition_id:3DdHsqFS2UjkaUp2siQETTRiQCBeFqvrnpjsPBTBDRct","workflow_task_id:7knwKKtcR2KDJeKNwn6s6LSUXB45eDYT8HHQiuXRZC96","workflow_task_id:2QJ4L4vzbYnqeZzACDUKtQ32fF7q8RPBhAXZBbBWPsfB"]},"workflow:6E2rapUdMhuaavQjk5vbDCrD5xxGvadP3BXBBSqYNfep":{"type":"workflow","content_hash":"FMvo8zAkuyMoZYcN4qxX8FuUC9ykmN6wvjBoCpGkwQCP","hash":"AQF9AkiHZWMX2Z1LwFhFqFpaxuGUSvbmFEVsuxi9tN8d","fields":{"humanSecondsSaved":0,"notes":[],"output":[{"output":"{{ CTX.output }}"},{"output_raw":"{{ CTX.query_results.output }}"}],"parameters":{},"tasks":[{"id":"@@@workflow_task_id_ref1@@@","action":{"id":"@@@action_ref1@@@"},"humanSecondsSaved":0,"input":{},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"jsonify_output","next":[{"do":[],"from":null,"id":"@@@transition_id_ref1@@@","publish":[{"key":"output","value":"{% macro reconstruct_json_elements(data) -%}\n    {#- # Initialize an empty list to hold the processed records -#}\n    {% set result = [] %}\n\n    {#- # Iterate over each record in the provided data -#}\n    {% for record in data %}\n        {#- # Create a new dictionary for the processed record -#}\n        {% set new_record = {} %}\n\n        {#- # Iterate over each key-value pair in the current record -#}\n        {% for key, value in record.items() %}\n            {#- # Check if the value is a string representation of a JSON object or array -#}\n            {% if value | string | regex_match('^\\\\[.*\\\\]$') or value | string | regex_match('^\\\\{.*\\\\}$') %}\n                {#- # If it matches, convert the string back to a JSON object or array -#}\n                {% set processed_value = value | from_json_string %}\n            {% else %}\n                {#- # If it doesn't match, keep the value as-is -#}\n                {% set processed_value = value %}\n            {% endif %}\n\n            {#- # Update the new record with the processed key-value pair -#}\n            {% do new_record.update({key: processed_value}) %}\n        {% endfor %}\n\n        {#- # Append the processed record to the result list -#}\n        {% do result.append(new_record) %}\n    {% endfor %}\n\n    {#- # Return the list of processed records -#}\n    {{- result -}}\n{%- endmacro %}\n\n{{- reconstruct_json_elements(CTX.query_results.output) -}}"}],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null},{"id":"@@@workflow_task_id_ref2@@@","action":{"workflow_id":"@@@workflow_ref1@@@"},"humanSecondsSaved":0,"input":{"row_key":null,"contents":null,"operation":"query","table_name":"{{ ORG.VARIABLES.agent_smith_device_table_name }}","partition_key":null,"query_expression":null,"storage_account_name":"{{ ORG.VARIABLES.agent_smith_storage_account }}"},"isMocked":false,"join":0,"mockInput":{"mock_result":{}},"name":"select_devices_from_azure_table","next":[{"do":["@@@workflow_task_id_ref1@@@"],"from":null,"id":"@@@transition_id_ref2@@@","publish":[{"key":"query_result","value":"{{ RESULT.output[0] | d }}"}],"to":null,"when":"{{ SUCCEEDED }}"}],"packOverrides":[],"publishResultAs":"query_results","retry":null,"runAsOrgId":"","timeout":600,"transitionMode":"FOLLOW_ALL","with":null}],"timeout":28800,"type":"STANDARD","varsSchema":{}},"nonfunctional_fields":{"description":"","name":"Agent Smith: List Devices in Table","tasks[0].description":"Action that does nothing","tasks[0].metadata":{"x":696,"y":552,"clonedFromId":"c2f2245b57504bfead469b31021a86e6"},"tasks[0].next[0].label":"","tasks[1].description":"","tasks[1].metadata":{"x":696,"y":384,"clonedFromId":"9c94d85996f246af9c17917fce9abe84"},"tasks[1].next[0].label":""},"references":{"action_ref1":{"kind":"string","type":"action","src_key_hash":"EP5vDxnDjrYnpHo1dbtz8YCrvEq3jKHngkLwkfJqAx58","content_hash":"CdPL6KHuhM7mBvTHi4QnQbxCitnoxuRrq1BfHNnQYzKB","locations":["tasks[0].action.id"]},"workflow_ref1":{"kind":"string","type":"workflow","src_key_hash":"3h1xX2UPtepv6WfQuw1cuUDLmY21cvvbnqDvJ7ts1LR3","content_hash":"Gu1dKYcdwjxL3mbDSHE4KTuTDbDDTNi1vpFu218PgTcG","locations":["tasks[1].action.workflow_id"]},"transition_id_ref2":{"kind":"string","type":"transition_id","src_key_hash":"AwDYpdRyspmHMXG23m7LtDzJ3qqE1c4x69r5YXtorg2f","content_hash":"81t1LXinsPMyHfqm8Q5Mysy4nFJjfpv9A7gajzrXscKE","locations":["tasks[1].next[0].id"]},"transition_id_ref1":{"kind":"string","type":"transition_id","src_key_hash":"HgCnDXwNBxapYuyVUWRZ2257mWwwm5NHVPQ26JLJoa2L","content_hash":"FbhN4CYHv8uySyABRyoavL9ZuuoETgbjtK3sWdPGDddm","locations":["tasks[0].next[0].id"]},"workflow_task_id_ref2":{"kind":"string","type":"workflow_task_id","src_key_hash":"J716cUBCVe49yaEy5bTno4v4DKNAi45Rou9qxuLqJXWn","content_hash":"HbnxTL9wnND2ttHmAy5BAY3nwxQY6TziVrbj68M3Yw17","locations":["tasks[1].id"]},"workflow_task_id_ref1":{"kind":"string","type":"workflow_task_id","src_key_hash":"5AHL8u7LPxjQishrMJAB6cgrf45KqZBmLwSBHZxBznye","content_hash":"HyaJEV9qeMNnBLooZJN77N8KVRRquGByDyQZR5JUNrYd","locations":["tasks[0].id","tasks[1].next[0].do[0]"]}},"dependencies":["workflow:3h1xX2UPtepv6WfQuw1cuUDLmY21cvvbnqDvJ7ts1LR3","workflow_task_id:J716cUBCVe49yaEy5bTno4v4DKNAi45Rou9qxuLqJXWn","workflow_task_id:5AHL8u7LPxjQishrMJAB6cgrf45KqZBmLwSBHZxBznye","action:EP5vDxnDjrYnpHo1dbtz8YCrvEq3jKHngkLwkfJqAx58","transition_id:HgCnDXwNBxapYuyVUWRZ2257mWwwm5NHVPQ26JLJoa2L","transition_id:AwDYpdRyspmHMXG23m7LtDzJ3qqE1c4x69r5YXtorg2f"]}},"__typename":"ExportBundle"}
